[
    {
        "id": "549",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x8_t a = {0};\n    int8x16_t b = {0};\n    int8x16_t c = {0};\n    int16x8_t result = vabal_high_s8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_549.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #384\n\t.cfi_def_cfa_offset 384\n\tstp\tx29, x30, [sp, #352]            // 16-byte Folded Spill\n\tstr\tx28, [sp, #368]                 // 8-byte Folded Spill\n\tadd\tx29, sp, #352\n\t.cfi_def_cfa w29, 32\n\t.cfi_offset w28, -16\n\t.cfi_offset w30, -24\n\t.cfi_offset w29, -32\n\tmovi\tv1.2d, #0000000000000000\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #92]\n\tstr\tq1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstr\tq2, [sp, #144]\n\tstr\tq1, [sp, #128]\n\tstr\tq0, [sp, #112]\n\tldr\tq2, [sp, #144]\n\tldr\tq0, [sp, #128]\n\tstur\tq0, [x29, #-96]\n\tldur\tq0, [x29, #-96]\n\tldur\tq1, [x29, #-96]\n\text\tv1.16b, v0.16b, v1.16b, #8\n\tfmov\td0, d1\n\tmov\td1, v1.d[1]\n\tstur\td0, [x29, #-104]\n\tldur\td1, [x29, #-104]\n\tldr\tq0, [sp, #112]\n\tstur\tq0, [x29, #-128]\n\tldur\tq0, [x29, #-128]\n\tldur\tq3, [x29, #-128]\n\text\tv3.16b, v0.16b, v3.16b, #8\n\tfmov\td0, d3\n\tmov\td3, v3.d[1]\n\tstur\td0, [x29, #-136]\n\tldur\td0, [x29, #-136]\n\tstur\tq2, [x29, #-160]\n\tstur\td1, [x29, #-168]\n\tstr\td0, [sp, #176]\n\tldur\tq0, [x29, #-160]\n\tldur\td2, [x29, #-168]\n\tldr\td1, [sp, #176]\n\tstur\td2, [x29, #-56]\n\tstur\td1, [x29, #-64]\n\tldur\td2, [x29, #-56]\n\tldur\td1, [x29, #-64]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tsabd\tv1.8b, v1.8b, v2.8b\n\tstur\td1, [x29, #-24]\n\tldur\td1, [x29, #-24]\n\tstur\td1, [x29, #-32]\n\tldur\td1, [x29, #-32]\n\tushll\tv1.8h, v1.8b, #0\n\tstur\tq1, [x29, #-48]\n\tldur\tq1, [x29, #-48]\n\tstur\tq1, [x29, #-80]\n\tldur\tq1, [x29, #-80]\n\tadd\tv0.8h, v0.8h, v1.8h\n\tstr\tq0, [sp, #160]\n\tldr\tq0, [sp, #160]\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 384\n\tldr\tx28, [sp, #368]                 // 8-byte Folded Reload\n\tldp\tx29, x30, [sp, #352]            // 16-byte Folded Reload\n\tadd\tsp, sp, #384\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w28\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "237",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float64x2_t a = {0};\n    float64x2_t b = {0};\n    float64x2_t c = {0};\n    float64x2_t result = vfmaq_f64(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_237.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tldur\tq1, [x29, #-48]\n\tfmla\tv0.2d, v1.2d, v2.2d\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "232",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    uint16x8_t b = {0};\n    uint16x8_t c = {0};\n    uint32x4_t result = vmlsl_high_u16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_232.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #336\n\t.cfi_def_cfa_offset 336\n\tstp\tx29, x30, [sp, #304]            // 16-byte Folded Spill\n\tstr\tx28, [sp, #320]                 // 8-byte Folded Spill\n\tadd\tx29, sp, #304\n\t.cfi_def_cfa w29, 32\n\t.cfi_offset w28, -16\n\t.cfi_offset w30, -24\n\t.cfi_offset w29, -32\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\tw8, [sp, #92]\n\tstr\tw8, [sp, #64]\n\tstr\tw8, [sp, #68]\n\tstr\tw8, [sp, #72]\n\tstr\tw8, [sp, #76]\n\tmovi\tv0.2d, #0000000000000000\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstr\tq2, [sp, #144]\n\tstr\tq1, [sp, #128]\n\tstr\tq0, [sp, #112]\n\tldr\tq2, [sp, #144]\n\tldr\tq0, [sp, #128]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-48]\n\text\tv0.16b, v0.16b, v0.16b, #8\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\td0, [x29, #-56]\n\tldur\td1, [x29, #-56]\n\tldr\tq0, [sp, #112]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\text\tv0.16b, v0.16b, v0.16b, #8\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\td0, [x29, #-88]\n\tldur\td0, [x29, #-88]\n\tstur\tq2, [x29, #-112]\n\tstur\td1, [x29, #-120]\n\tstur\td0, [x29, #-128]\n\tldur\tq0, [x29, #-112]\n\tldur\td2, [x29, #-120]\n\tldur\td1, [x29, #-128]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tumull\tv1.4s, v1.4h, v2.4h\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-32]\n\tsub\tv0.4s, v0.4s, v1.4s\n\tstur\tq0, [x29, #-144]\n\tldur\tq0, [x29, #-144]\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n                                        // kill: def $w1 killed $w0\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 336\n\tldr\tx28, [sp, #320]                 // 8-byte Folded Reload\n\tldp\tx29, x30, [sp, #304]            // 16-byte Folded Reload\n\tadd\tsp, sp, #336\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w28\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "200",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x8_t a = {0};\n    uint8x8_t b = {0};\n    uint8x8_t c = {0};\n    uint8x8_t result = vmls_u8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_200.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tmul\tv1.8b, v1.8b, v2.8b\n\tsub\tv0.8b, v0.8b, v1.8b\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "216",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x8_t a = {0};\n    int8x16_t b = {0};\n    int8x16_t c = {0};\n    int16x8_t result = vmlal_high_s8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_216.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #336\n\t.cfi_def_cfa_offset 336\n\tstp\tx29, x30, [sp, #304]            // 16-byte Folded Spill\n\tstr\tx28, [sp, #320]                 // 8-byte Folded Spill\n\tadd\tx29, sp, #304\n\t.cfi_def_cfa w29, 32\n\t.cfi_offset w28, -16\n\t.cfi_offset w30, -24\n\t.cfi_offset w29, -32\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\tw8, [sp, #92]\n\tmovi\tv0.2d, #0000000000000000\n\tstr\tq0, [sp, #64]\n\tmovi\tv0.2d, #0000000000000000\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstr\tq2, [sp, #144]\n\tstr\tq1, [sp, #128]\n\tstr\tq0, [sp, #112]\n\tldr\tq2, [sp, #144]\n\tldr\tq0, [sp, #128]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-48]\n\text\tv0.16b, v0.16b, v0.16b, #8\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\td0, [x29, #-56]\n\tldur\td1, [x29, #-56]\n\tldr\tq0, [sp, #112]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\text\tv0.16b, v0.16b, v0.16b, #8\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\td0, [x29, #-88]\n\tldur\td0, [x29, #-88]\n\tstur\tq2, [x29, #-112]\n\tstur\td1, [x29, #-120]\n\tstur\td0, [x29, #-128]\n\tldur\tq0, [x29, #-112]\n\tldur\td2, [x29, #-120]\n\tldur\td1, [x29, #-128]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tsmull\tv1.8h, v1.8b, v2.8b\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-32]\n\tadd\tv0.8h, v0.8h, v1.8h\n\tstur\tq0, [x29, #-144]\n\tldur\tq0, [x29, #-144]\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n                                        // kill: def $w1 killed $w0\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 336\n\tldr\tx28, [sp, #320]                 // 8-byte Folded Reload\n\tldp\tx29, x30, [sp, #304]            // 16-byte Folded Reload\n\tadd\tsp, sp, #336\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w28\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "1963",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x8_t a = {0};\n    uint16x8_t b = {0};\n    uint16x8_t c = {0};\n    uint16x8_t result = vbslq_u16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_1963.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tbsl\tv0.16b, v1.16b, v2.16b\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "4012",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t r = {0};\n    uint8x16_t a = {0};\n    uint8x16_t b = {0};\n    uint32x4_t result = vmmlaq_u32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "471",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int8x8_t r = {0};\n    int16x8_t a = {0};\n    int16x8_t b = {0};\n    int8x16_t result = vrsubhn_high_s16(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_471.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #76]\n\tstr\td1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\td2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\td2, [x29, #-88]\n\tstr\tq1, [sp, #112]\n\tstr\tq0, [sp, #96]\n\tldur\td1, [x29, #-88]\n\tldr\tq2, [sp, #112]\n\tldr\tq0, [sp, #96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\trsubhn\tv0.8b, v0.8h, v2.8h\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstur\td0, [x29, #-56]\n\tldur\td2, [x29, #-48]\n\tldur\td0, [x29, #-56]\n                                        // implicit-def: $q1\n\tfmov\td1, d0\n                                        // implicit-def: $q0\n\tfmov\td0, d2\n\tmov\tv0.d[1], v1.d[0]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "201",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x16_t a = {0};\n    uint8x16_t b = {0};\n    uint8x16_t c = {0};\n    uint8x16_t result = vmlsq_u8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_201.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tmul\tv1.16b, v1.16b, v2.16b\n\tsub\tv0.16b, v0.16b, v1.16b\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3543",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x8_t a = {0};\n    int16x8_t b = {0};\n    int16x8_t c = {0};\n    int16x8_t result = vqrdmlahq_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3899",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    uint32x4_t b = {0};\n    uint32x4_t c = {0};\n    uint32x4_t result = vbcaxq_u32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "210",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x8_t a = {0};\n    int8x8_t b = {0};\n    int8x8_t c = {0};\n    int16x8_t result = vmlal_s8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_210.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\tw8, [sp, #76]\n\tmovi\tv0.2d, #0000000000000000\n\tstr\tq0, [sp, #48]\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tldr\tq2, [sp, #48]\n\tldr\td1, [sp, #40]\n\tldr\td0, [sp, #32]\n\tstur\tq2, [x29, #-48]\n\tstur\td1, [x29, #-56]\n\tstur\td0, [x29, #-64]\n\tldur\tq0, [x29, #-48]\n\tldur\td2, [x29, #-56]\n\tldur\td1, [x29, #-64]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tsmull\tv1.8h, v1.8b, v2.8b\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-32]\n\tadd\tv0.8h, v0.8h, v1.8h\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n                                        // kill: def $w1 killed $w0\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "4013",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t r = {0};\n    uint8x16_t a = {0};\n    int8x16_t b = {0};\n    int32x4_t result = vusmmlaq_s32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3893",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int32x4_t b = {0};\n    int32x4_t c = {0};\n    int32x4_t result = veor3q_s32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "462",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x8_t r = {0};\n    uint16x8_t a = {0};\n    uint16x8_t b = {0};\n    uint8x16_t result = vsubhn_high_u16(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_462.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #76]\n\tstr\td1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\td2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\td2, [x29, #-88]\n\tstr\tq1, [sp, #112]\n\tstr\tq0, [sp, #96]\n\tldur\td1, [x29, #-88]\n\tldr\tq2, [sp, #112]\n\tldr\tq0, [sp, #96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tsub\tv0.8h, v0.8h, v2.8h\n\tshrn\tv0.8b, v0.8h, #8\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstur\td0, [x29, #-56]\n\tldur\td2, [x29, #-48]\n\tldur\td0, [x29, #-56]\n                                        // implicit-def: $q1\n\tfmov\td1, d0\n                                        // implicit-def: $q0\n\tfmov\td0, d2\n\tmov\tv0.d[1], v1.d[0]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "184",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x8_t a = {0};\n    uint8x8_t b = {0};\n    uint8x8_t c = {0};\n    uint8x8_t result = vmla_u8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_184.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tmul\tv1.8b, v1.8b, v2.8b\n\tadd\tv0.8b, v0.8b, v1.8b\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "540",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x8_t a = {0};\n    uint16x8_t b = {0};\n    uint16x8_t c = {0};\n    uint16x8_t result = vabaq_u16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_540.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #224\n\t.cfi_def_cfa_offset 224\n\tstp\tx29, x30, [sp, #208]            // 16-byte Folded Spill\n\tadd\tx29, sp, #208\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #92]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-64]\n\tstur\tq1, [x29, #-80]\n\tstur\tq0, [x29, #-96]\n\tldur\tq0, [x29, #-64]\n\tldur\tq2, [x29, #-80]\n\tldur\tq1, [x29, #-96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tuabd\tv1.8h, v1.8h, v2.8h\n\tstur\tq1, [x29, #-48]\n\tldur\tq1, [x29, #-48]\n\tadd\tv0.8h, v0.8h, v1.8h\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 224\n\tldp\tx29, x30, [sp, #208]            // 16-byte Folded Reload\n\tadd\tsp, sp, #224\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "186",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x4_t a = {0};\n    uint16x4_t b = {0};\n    uint16x4_t c = {0};\n    uint16x4_t result = vmla_u16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_186.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tmul\tv1.4h, v1.4h, v2.4h\n\tadd\tv0.4h, v0.4h, v1.4h\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "190",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float32x2_t a = {0};\n    float32x2_t b = {0};\n    float32x2_t c = {0};\n    float32x2_t result = vmla_f32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_190.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tldur\td1, [x29, #-24]\n\tfmla\tv0.2s, v1.2s, v2.2s\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "207",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float32x4_t a = {0};\n    float32x4_t b = {0};\n    float32x4_t c = {0};\n    float32x4_t result = vmlsq_f32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_207.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tldur\tq1, [x29, #-48]\n\tfmls\tv0.4s, v1.4s, v2.4s\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "547",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    uint16x4_t b = {0};\n    uint16x4_t c = {0};\n    uint32x4_t result = vabal_u16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_547.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #224\n\t.cfi_def_cfa_offset 224\n\tstp\tx29, x30, [sp, #208]            // 16-byte Folded Spill\n\tadd\tx29, sp, #208\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv1.2d, #0000000000000000\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstr\twzr, [sp, #76]\n\tstr\tq1, [sp, #48]\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tldr\tq2, [sp, #48]\n\tldr\td1, [sp, #40]\n\tldr\td0, [sp, #32]\n\tstur\tq2, [x29, #-96]\n\tstr\td1, [sp, #104]\n\tstr\td0, [sp, #96]\n\tldur\tq0, [x29, #-96]\n\tldr\td2, [sp, #104]\n\tldr\td1, [sp, #96]\n\tstur\td2, [x29, #-56]\n\tstur\td1, [x29, #-64]\n\tldur\td2, [x29, #-56]\n\tldur\td1, [x29, #-64]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tuabd\tv1.4h, v1.4h, v2.4h\n\tstur\td1, [x29, #-24]\n\tldur\td1, [x29, #-24]\n\tstur\td1, [x29, #-32]\n\tldur\td1, [x29, #-32]\n\tushll\tv1.4s, v1.4h, #0\n\tstur\tq1, [x29, #-48]\n\tldur\tq1, [x29, #-48]\n\tstur\tq1, [x29, #-80]\n\tldur\tq1, [x29, #-80]\n\tadd\tv0.4s, v0.4s, v1.4s\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 224\n\tldp\tx29, x30, [sp, #208]            // 16-byte Folded Reload\n\tadd\tsp, sp, #224\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "536",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int32x4_t b = {0};\n    int32x4_t c = {0};\n    int32x4_t result = vabaq_s32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_536.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #224\n\t.cfi_def_cfa_offset 224\n\tstp\tx29, x30, [sp, #208]            // 16-byte Folded Spill\n\tadd\tx29, sp, #208\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tstr\twzr, [sp, #92]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-64]\n\tstur\tq1, [x29, #-80]\n\tstur\tq0, [x29, #-96]\n\tldur\tq0, [x29, #-64]\n\tldur\tq2, [x29, #-80]\n\tldur\tq1, [x29, #-96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tsabd\tv1.4s, v1.4s, v2.4s\n\tstur\tq1, [x29, #-48]\n\tldur\tq1, [x29, #-48]\n\tadd\tv0.4s, v0.4s, v1.4s\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 224\n\tldp\tx29, x30, [sp, #208]            // 16-byte Folded Reload\n\tadd\tsp, sp, #224\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "1953",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x16_t a = {0};\n    int8x16_t b = {0};\n    int8x16_t c = {0};\n    int8x16_t result = vbslq_s8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_1953.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tbsl\tv0.16b, v1.16b, v2.16b\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3545",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x4_t a = {0};\n    int16x4_t b = {0};\n    int16x4_t c = {0};\n    int16x4_t result = vqrdmlsh_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "459",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int8x8_t r = {0};\n    int16x8_t a = {0};\n    int16x8_t b = {0};\n    int8x16_t result = vsubhn_high_s16(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_459.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #76]\n\tstr\td1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\td2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\td2, [x29, #-88]\n\tstr\tq1, [sp, #112]\n\tstr\tq0, [sp, #96]\n\tldur\td1, [x29, #-88]\n\tldr\tq2, [sp, #112]\n\tldr\tq0, [sp, #96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tsub\tv0.8h, v0.8h, v2.8h\n\tshrn\tv0.8b, v0.8h, #8\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstur\td0, [x29, #-56]\n\tldur\td2, [x29, #-48]\n\tldur\td0, [x29, #-56]\n                                        // implicit-def: $q1\n\tfmov\td1, d0\n                                        // implicit-def: $q0\n\tfmov\td0, d2\n\tmov\tv0.d[1], v1.d[0]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3419",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x8_t a = {0};\n    uint8x8x2_t b = {0};\n    uint8x8_t idx = {0};\n    uint8x8_t result = vtbx2_u8(a, b, idx);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_3419.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #112\n\t.cfi_def_cfa_offset 112\n\tstp\tx29, x30, [sp, #96]             // 16-byte Folded Spill\n\tadd\tx29, sp, #96\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-44]\n\tstr\td0, [sp, #40]\n\tstr\txzr, [sp, #24]\n\tstr\txzr, [sp, #32]\n\tstr\td0, [sp, #16]\n\tldr\td1, [sp, #40]\n\tldr\td0, [sp, #16]\n\tldr\td3, [sp, #24]\n\tldr\td2, [sp, #32]\n\tstur\td3, [x29, #-16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-24]\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-24]\n\tldur\td4, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-32]\n                                        // implicit-def: $q3\n\tfmov\td3, d1\n                                        // implicit-def: $q1\n\tfmov\td1, d4\n\tmov\tv1.d[1], v3.d[0]\n\ttbx\tv0.8b, { v1.16b }, v2.8b\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 112\n\tldp\tx29, x30, [sp, #96]             // 16-byte Folded Reload\n\tadd\tsp, sp, #112\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "197",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x8_t a = {0};\n    int16x8_t b = {0};\n    int16x8_t c = {0};\n    int16x8_t result = vmlsq_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_197.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tmul\tv1.8h, v1.8h, v2.8h\n\tsub\tv0.8h, v0.8h, v1.8h\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "1971",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    float32x4_t b = {0};\n    float32x4_t c = {0};\n    float32x4_t result = vbslq_f32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_1971.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv1.2d, #0000000000000000\n\tmovi\tv0.2d, #0000000000000000\n\tstur\twzr, [x29, #-68]\n\tstr\tq1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tbsl\tv0.16b, v1.16b, v2.16b\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3903",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int32x4_t b = {0};\n    int32x4_t c = {0};\n    int32x4_t result = vbcaxq_s32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3433",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x16_t a = {0};\n    uint8x16_t t = {0};\n    uint8x16_t idx = {0};\n    uint8x16_t result = vqtbx1q_u8(a, t, idx);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_3433.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\ttbx\tv0.16b, { v1.16b }, v2.16b\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "182",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x2_t a = {0};\n    int32x2_t b = {0};\n    int32x2_t c = {0};\n    int32x2_t result = vmla_s32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_182.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tmul\tv1.2s, v1.2s, v2.2s\n\tadd\tv0.2s, v0.2s, v1.2s\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3865",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t r = {0};\n    int8x16_t a = {0};\n    int8x16_t b = {0};\n    int32x4_t result = vdotq_s32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3897",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x16_t a = {0};\n    uint8x16_t b = {0};\n    uint8x16_t c = {0};\n    uint8x16_t result = vbcaxq_u8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "1970",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x2_t a = {0};\n    float32x2_t b = {0};\n    float32x2_t c = {0};\n    float32x2_t result = vbsl_f32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_1970.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\twzr, [x29, #-36]\n\tstr\td1, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tbsl\tv0.8b, v1.8b, v2.8b\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "90",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x4_t r = {0};\n    int32x4_t a = {0};\n    int32x4_t b = {0};\n    int16x8_t result = vraddhn_high_s32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_90.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tstr\twzr, [sp, #76]\n\tstr\td1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\td2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\td2, [x29, #-88]\n\tstr\tq1, [sp, #112]\n\tstr\tq0, [sp, #96]\n\tldur\td1, [x29, #-88]\n\tldr\tq2, [sp, #112]\n\tldr\tq0, [sp, #96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\traddhn\tv0.4h, v0.4s, v2.4s\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstur\td0, [x29, #-56]\n\tldur\td2, [x29, #-48]\n\tldur\td0, [x29, #-56]\n                                        // implicit-def: $q1\n\tfmov\td1, d0\n                                        // implicit-def: $q0\n\tfmov\td0, d2\n\tmov\tv0.d[1], v1.d[0]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "183",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int32x4_t b = {0};\n    int32x4_t c = {0};\n    int32x4_t result = vmlaq_s32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_183.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tmul\tv1.4s, v1.4s, v2.4s\n\tadd\tv0.4s, v0.4s, v1.4s\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "235",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float32x4_t a = {0};\n    float32x4_t b = {0};\n    float32x4_t c = {0};\n    float32x4_t result = vfmaq_f32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_235.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tldur\tq1, [x29, #-48]\n\tfmla\tv0.4s, v1.4s, v2.4s\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3955",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float32x2_t r = {0};\n    float32x2_t a = {0};\n    float32x2_t b = {0};\n    float32x2_t result = vcmla_rot270_f32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "181",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x8_t a = {0};\n    int16x8_t b = {0};\n    int16x8_t c = {0};\n    int16x8_t result = vmlaq_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_181.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tmul\tv1.8h, v1.8h, v2.8h\n\tadd\tv0.8h, v0.8h, v1.8h\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "543",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x8_t a = {0};\n    int8x8_t b = {0};\n    int8x8_t c = {0};\n    int16x8_t result = vabal_s8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_543.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #224\n\t.cfi_def_cfa_offset 224\n\tstp\tx29, x30, [sp, #208]            // 16-byte Folded Spill\n\tadd\tx29, sp, #208\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv1.2d, #0000000000000000\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #76]\n\tstr\tq1, [sp, #48]\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tldr\tq2, [sp, #48]\n\tldr\td1, [sp, #40]\n\tldr\td0, [sp, #32]\n\tstur\tq2, [x29, #-96]\n\tstr\td1, [sp, #104]\n\tstr\td0, [sp, #96]\n\tldur\tq0, [x29, #-96]\n\tldr\td2, [sp, #104]\n\tldr\td1, [sp, #96]\n\tstur\td2, [x29, #-56]\n\tstur\td1, [x29, #-64]\n\tldur\td2, [x29, #-56]\n\tldur\td1, [x29, #-64]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tsabd\tv1.8b, v1.8b, v2.8b\n\tstur\td1, [x29, #-24]\n\tldur\td1, [x29, #-24]\n\tstur\td1, [x29, #-32]\n\tldur\td1, [x29, #-32]\n\tushll\tv1.8h, v1.8b, #0\n\tstur\tq1, [x29, #-48]\n\tldur\tq1, [x29, #-48]\n\tstur\tq1, [x29, #-80]\n\tldur\tq1, [x29, #-80]\n\tadd\tv0.8h, v0.8h, v1.8h\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 224\n\tldp\tx29, x30, [sp, #208]            // 16-byte Folded Reload\n\tadd\tsp, sp, #224\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "92",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x8_t r = {0};\n    uint16x8_t a = {0};\n    uint16x8_t b = {0};\n    uint8x16_t result = vraddhn_high_u16(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_92.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #76]\n\tstr\td1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\td2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\td2, [x29, #-88]\n\tstr\tq1, [sp, #112]\n\tstr\tq0, [sp, #96]\n\tldur\td1, [x29, #-88]\n\tldr\tq2, [sp, #112]\n\tldr\tq0, [sp, #96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\traddhn\tv0.8b, v0.8h, v2.8h\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstur\td0, [x29, #-56]\n\tldur\td2, [x29, #-48]\n\tldur\td0, [x29, #-56]\n                                        // implicit-def: $q1\n\tfmov\td1, d0\n                                        // implicit-def: $q0\n\tfmov\td0, d2\n\tmov\tv0.d[1], v1.d[0]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "77",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int8x8_t r = {0};\n    int16x8_t a = {0};\n    int16x8_t b = {0};\n    int8x16_t result = vaddhn_high_s16(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_77.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #76]\n\tstr\td1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\td2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\td2, [x29, #-88]\n\tstr\tq1, [sp, #112]\n\tstr\tq0, [sp, #96]\n\tldur\td1, [x29, #-88]\n\tldr\tq2, [sp, #112]\n\tldr\tq0, [sp, #96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tadd\tv0.8h, v0.8h, v2.8h\n\tshrn\tv0.8b, v0.8h, #8\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstur\td0, [x29, #-56]\n\tldur\td2, [x29, #-48]\n\tldur\td0, [x29, #-56]\n                                        // implicit-def: $q1\n\tfmov\td1, d0\n                                        // implicit-def: $q0\n\tfmov\td0, d2\n\tmov\tv0.d[1], v1.d[0]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "80",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x8_t r = {0};\n    uint16x8_t a = {0};\n    uint16x8_t b = {0};\n    uint8x16_t result = vaddhn_high_u16(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_80.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #76]\n\tstr\td1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\td2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\td2, [x29, #-88]\n\tstr\tq1, [sp, #112]\n\tstr\tq0, [sp, #96]\n\tldur\td1, [x29, #-88]\n\tldr\tq2, [sp, #112]\n\tldr\tq0, [sp, #96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tadd\tv0.8h, v0.8h, v2.8h\n\tshrn\tv0.8b, v0.8h, #8\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstur\td0, [x29, #-56]\n\tldur\td2, [x29, #-48]\n\tldur\td0, [x29, #-56]\n                                        // implicit-def: $q1\n\tfmov\td1, d0\n                                        // implicit-def: $q0\n\tfmov\td0, d2\n\tmov\tv0.d[1], v1.d[0]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "1962",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x4_t a = {0};\n    uint16x4_t b = {0};\n    uint16x4_t c = {0};\n    uint16x4_t result = vbsl_u16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_1962.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tbsl\tv0.8b, v1.8b, v2.8b\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3518",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t w0_3 = {0};\n    uint32x4_t w4_7 = {0};\n    uint32x4_t w8_11 = {0};\n    uint32x4_t result = vsha1su0q_u32(w0_3, w4_7, w8_11);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3864",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t r = {0};\n    uint8x16_t a = {0};\n    uint8x16_t b = {0};\n    uint32x4_t result = vdotq_u32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "203",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x8_t a = {0};\n    uint16x8_t b = {0};\n    uint16x8_t c = {0};\n    uint16x8_t result = vmlsq_u16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_203.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tmul\tv1.8h, v1.8h, v2.8h\n\tsub\tv0.8h, v0.8h, v1.8h\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "178",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int8x8_t a = {0};\n    int8x8_t b = {0};\n    int8x8_t c = {0};\n    int8x8_t result = vmla_s8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_178.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tmul\tv1.8b, v1.8b, v2.8b\n\tadd\tv0.8b, v0.8b, v1.8b\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "4014",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x2_t r = {0};\n    uint8x8_t a = {0};\n    int8x8_t b = {0};\n    int32x2_t result = vusdot_s32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "205",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    uint32x4_t b = {0};\n    uint32x4_t c = {0};\n    uint32x4_t result = vmlsq_u32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_205.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tmul\tv1.4s, v1.4s, v2.4s\n\tsub\tv0.4s, v0.4s, v1.4s\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "537",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x8_t a = {0};\n    uint8x8_t b = {0};\n    uint8x8_t c = {0};\n    uint8x8_t result = vaba_u8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_537.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #128\n\t.cfi_def_cfa_offset 128\n\tstp\tx29, x30, [sp, #112]            // 16-byte Folded Spill\n\tadd\tx29, sp, #112\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #52]\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tldr\td2, [sp, #40]\n\tldr\td1, [sp, #32]\n\tldr\td0, [sp, #24]\n\tstur\td2, [x29, #-32]\n\tstur\td1, [x29, #-40]\n\tstur\td0, [x29, #-48]\n\tldur\td0, [x29, #-32]\n\tldur\td2, [x29, #-40]\n\tldur\td1, [x29, #-48]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tuabd\tv1.8b, v1.8b, v2.8b\n\tstur\td1, [x29, #-24]\n\tldur\td1, [x29, #-24]\n\tadd\tv0.8b, v0.8b, v1.8b\n\tstr\td0, [sp, #56]\n\tldr\td0, [sp, #56]\n\tstr\td0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 128\n\tldp\tx29, x30, [sp, #112]            // 16-byte Folded Reload\n\tadd\tsp, sp, #128\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "1960",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x8_t a = {0};\n    uint8x8_t b = {0};\n    uint8x8_t c = {0};\n    uint8x8_t result = vbsl_u8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_1960.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tbsl\tv0.8b, v1.8b, v2.8b\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "288",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int16x8_t b = {0};\n    int16x8_t c = {0};\n    int32x4_t result = vqdmlal_high_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_288.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #304\n\t.cfi_def_cfa_offset 304\n\tstp\tx29, x30, [sp, #272]            // 16-byte Folded Spill\n\tstr\tx28, [sp, #288]                 // 8-byte Folded Spill\n\tadd\tx29, sp, #272\n\t.cfi_def_cfa w29, 32\n\t.cfi_offset w28, -16\n\t.cfi_offset w30, -24\n\t.cfi_offset w29, -32\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv1.2d, #0000000000000000\n\tmovi\tv0.2d, #0000000000000000\n\tstr\twzr, [sp, #92]\n\tstr\tq1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-128]\n\tstr\tq1, [sp, #128]\n\tstr\tq0, [sp, #112]\n\tldur\tq2, [x29, #-128]\n\tldr\tq0, [sp, #128]\n\tstur\tq0, [x29, #-16]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-16]\n\text\tv1.16b, v0.16b, v1.16b, #8\n\tfmov\td0, d1\n\tmov\td1, v1.d[1]\n\tstur\td0, [x29, #-24]\n\tldur\td1, [x29, #-24]\n\tldr\tq0, [sp, #112]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-48]\n\tldur\tq3, [x29, #-48]\n\text\tv3.16b, v0.16b, v3.16b, #8\n\tfmov\td0, d3\n\tmov\td3, v3.d[1]\n\tstur\td0, [x29, #-56]\n\tldur\td0, [x29, #-56]\n\tstur\tq2, [x29, #-80]\n\tstur\td1, [x29, #-88]\n\tstur\td0, [x29, #-96]\n\tldur\tq0, [x29, #-80]\n\tldur\td1, [x29, #-88]\n\tldur\td2, [x29, #-96]\n\tsqdmlal\tv0.4s, v1.4h, v2.4h\n\tstur\tq0, [x29, #-112]\n\tldur\tq0, [x29, #-112]\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 304\n\tldr\tx28, [sp, #288]                 // 8-byte Folded Reload\n\tldp\tx29, x30, [sp, #272]            // 16-byte Folded Reload\n\tadd\tsp, sp, #304\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w28\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "552",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x8_t a = {0};\n    uint8x16_t b = {0};\n    uint8x16_t c = {0};\n    uint16x8_t result = vabal_high_u8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_552.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #384\n\t.cfi_def_cfa_offset 384\n\tstp\tx29, x30, [sp, #352]            // 16-byte Folded Spill\n\tstr\tx28, [sp, #368]                 // 8-byte Folded Spill\n\tadd\tx29, sp, #352\n\t.cfi_def_cfa w29, 32\n\t.cfi_offset w28, -16\n\t.cfi_offset w30, -24\n\t.cfi_offset w29, -32\n\tmovi\tv1.2d, #0000000000000000\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #92]\n\tstr\tq1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstr\tq2, [sp, #144]\n\tstr\tq1, [sp, #128]\n\tstr\tq0, [sp, #112]\n\tldr\tq2, [sp, #144]\n\tldr\tq0, [sp, #128]\n\tstur\tq0, [x29, #-96]\n\tldur\tq0, [x29, #-96]\n\tldur\tq1, [x29, #-96]\n\text\tv1.16b, v0.16b, v1.16b, #8\n\tfmov\td0, d1\n\tmov\td1, v1.d[1]\n\tstur\td0, [x29, #-104]\n\tldur\td1, [x29, #-104]\n\tldr\tq0, [sp, #112]\n\tstur\tq0, [x29, #-128]\n\tldur\tq0, [x29, #-128]\n\tldur\tq3, [x29, #-128]\n\text\tv3.16b, v0.16b, v3.16b, #8\n\tfmov\td0, d3\n\tmov\td3, v3.d[1]\n\tstur\td0, [x29, #-136]\n\tldur\td0, [x29, #-136]\n\tstur\tq2, [x29, #-160]\n\tstur\td1, [x29, #-168]\n\tstr\td0, [sp, #176]\n\tldur\tq0, [x29, #-160]\n\tldur\td2, [x29, #-168]\n\tldr\td1, [sp, #176]\n\tstur\td2, [x29, #-56]\n\tstur\td1, [x29, #-64]\n\tldur\td2, [x29, #-56]\n\tldur\td1, [x29, #-64]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tuabd\tv1.8b, v1.8b, v2.8b\n\tstur\td1, [x29, #-24]\n\tldur\td1, [x29, #-24]\n\tstur\td1, [x29, #-32]\n\tldur\td1, [x29, #-32]\n\tushll\tv1.8h, v1.8b, #0\n\tstur\tq1, [x29, #-48]\n\tldur\tq1, [x29, #-48]\n\tstur\tq1, [x29, #-80]\n\tldur\tq1, [x29, #-80]\n\tadd\tv0.8h, v0.8h, v1.8h\n\tstr\tq0, [sp, #160]\n\tldr\tq0, [sp, #160]\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 384\n\tldr\tx28, [sp, #368]                 // 8-byte Folded Reload\n\tldp\tx29, x30, [sp, #352]            // 16-byte Folded Reload\n\tadd\tsp, sp, #384\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w28\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "1954",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x4_t a = {0};\n    int16x4_t b = {0};\n    int16x4_t c = {0};\n    int16x4_t result = vbsl_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_1954.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tbsl\tv0.8b, v1.8b, v2.8b\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3947",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float32x4_t r = {0};\n    float32x4_t a = {0};\n    float32x4_t b = {0};\n    float32x4_t result = vcmlaq_rot90_f32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "185",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x16_t a = {0};\n    uint8x16_t b = {0};\n    uint8x16_t c = {0};\n    uint8x16_t result = vmlaq_u8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_185.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tmul\tv1.16b, v1.16b, v2.16b\n\tadd\tv0.16b, v0.16b, v1.16b\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "1961",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x16_t a = {0};\n    uint8x16_t b = {0};\n    uint8x16_t c = {0};\n    uint8x16_t result = vbslq_u8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_1961.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tbsl\tv0.16b, v1.16b, v2.16b\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "222",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x8_t a = {0};\n    int8x8_t b = {0};\n    int8x8_t c = {0};\n    int16x8_t result = vmlsl_s8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_222.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\tw8, [sp, #76]\n\tmovi\tv0.2d, #0000000000000000\n\tstr\tq0, [sp, #48]\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tldr\tq2, [sp, #48]\n\tldr\td1, [sp, #40]\n\tldr\td0, [sp, #32]\n\tstur\tq2, [x29, #-48]\n\tstur\td1, [x29, #-56]\n\tstur\td0, [x29, #-64]\n\tldur\tq0, [x29, #-48]\n\tldur\td2, [x29, #-56]\n\tldur\td1, [x29, #-64]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tsmull\tv1.8h, v1.8b, v2.8b\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-32]\n\tsub\tv0.8h, v0.8h, v1.8h\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n                                        // kill: def $w1 killed $w0\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3863",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x2_t r = {0};\n    int8x8_t a = {0};\n    int8x8_t b = {0};\n    int32x2_t result = vdot_s32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "539",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x4_t a = {0};\n    uint16x4_t b = {0};\n    uint16x4_t c = {0};\n    uint16x4_t result = vaba_u16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_539.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #128\n\t.cfi_def_cfa_offset 128\n\tstp\tx29, x30, [sp, #112]            // 16-byte Folded Spill\n\tadd\tx29, sp, #112\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #52]\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tldr\td2, [sp, #40]\n\tldr\td1, [sp, #32]\n\tldr\td0, [sp, #24]\n\tstur\td2, [x29, #-32]\n\tstur\td1, [x29, #-40]\n\tstur\td0, [x29, #-48]\n\tldur\td0, [x29, #-32]\n\tldur\td2, [x29, #-40]\n\tldur\td1, [x29, #-48]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tuabd\tv1.4h, v1.4h, v2.4h\n\tstur\td1, [x29, #-24]\n\tldur\td1, [x29, #-24]\n\tadd\tv0.4h, v0.4h, v1.4h\n\tstr\td0, [sp, #56]\n\tldr\td0, [sp, #56]\n\tstr\td0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 128\n\tldp\tx29, x30, [sp, #112]            // 16-byte Folded Reload\n\tadd\tsp, sp, #128\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "472",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x4_t r = {0};\n    int32x4_t a = {0};\n    int32x4_t b = {0};\n    int16x8_t result = vrsubhn_high_s32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_472.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tstr\twzr, [sp, #76]\n\tstr\td1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\td2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\td2, [x29, #-88]\n\tstr\tq1, [sp, #112]\n\tstr\tq0, [sp, #96]\n\tldur\td1, [x29, #-88]\n\tldr\tq2, [sp, #112]\n\tldr\tq0, [sp, #96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\trsubhn\tv0.4h, v0.4s, v2.4s\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstur\td0, [x29, #-56]\n\tldur\td2, [x29, #-48]\n\tldur\td0, [x29, #-56]\n                                        // implicit-def: $q1\n\tfmov\td1, d0\n                                        // implicit-def: $q0\n\tfmov\td0, d2\n\tmov\tv0.d[1], v1.d[0]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3884",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    uint32x4_t b = {0};\n    uint32x4_t c = {0};\n    uint32x4_t result = vsm3partw2q_u32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3520",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t hash_abcd = {0};\n    uint32x4_t hash_efgh = {0};\n    uint32x4_t wk = {0};\n    uint32x4_t result = vsha256hq_u32(hash_abcd, hash_efgh, wk);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "191",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float32x4_t a = {0};\n    float32x4_t b = {0};\n    float32x4_t c = {0};\n    float32x4_t result = vmlaq_f32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_191.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tldur\tq1, [x29, #-48]\n\tfmla\tv0.4s, v1.4s, v2.4s\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "78",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x4_t r = {0};\n    int32x4_t a = {0};\n    int32x4_t b = {0};\n    int16x8_t result = vaddhn_high_s32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_78.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tstr\twzr, [sp, #76]\n\tstr\td1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\td2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\td2, [x29, #-88]\n\tstr\tq1, [sp, #112]\n\tstr\tq0, [sp, #96]\n\tldur\td1, [x29, #-88]\n\tldr\tq2, [sp, #112]\n\tldr\tq0, [sp, #96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tadd\tv0.4s, v0.4s, v2.4s\n\tshrn\tv0.4h, v0.4s, #16\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstur\td0, [x29, #-56]\n\tldur\td2, [x29, #-48]\n\tldur\td0, [x29, #-56]\n                                        // implicit-def: $q1\n\tfmov\td1, d0\n                                        // implicit-def: $q0\n\tfmov\td0, d2\n\tmov\tv0.d[1], v1.d[0]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3883",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    uint32x4_t b = {0};\n    uint32x4_t c = {0};\n    uint32x4_t result = vsm3partw1q_u32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3902",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x8_t a = {0};\n    int16x8_t b = {0};\n    int16x8_t c = {0};\n    int16x8_t result = vbcaxq_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3521",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t hash_efgh = {0};\n    uint32x4_t hash_abcd = {0};\n    uint32x4_t wk = {0};\n    uint32x4_t result = vsha256h2q_u32(hash_efgh, hash_abcd, wk);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "195",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int8x16_t a = {0};\n    int8x16_t b = {0};\n    int8x16_t c = {0};\n    int8x16_t result = vmlsq_s8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_195.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tmul\tv1.16b, v1.16b, v2.16b\n\tsub\tv0.16b, v0.16b, v1.16b\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "211",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int16x4_t b = {0};\n    int16x4_t c = {0};\n    int32x4_t result = vmlal_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_211.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\tw8, [sp, #76]\n\tstr\tw8, [sp, #48]\n\tstr\tw8, [sp, #52]\n\tstr\tw8, [sp, #56]\n\tstr\tw8, [sp, #60]\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tldr\tq2, [sp, #48]\n\tldr\td1, [sp, #40]\n\tldr\td0, [sp, #32]\n\tstur\tq2, [x29, #-48]\n\tstur\td1, [x29, #-56]\n\tstur\td0, [x29, #-64]\n\tldur\tq0, [x29, #-48]\n\tldur\td2, [x29, #-56]\n\tldur\td1, [x29, #-64]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tsmull\tv1.4s, v1.4h, v2.4h\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-32]\n\tadd\tv0.4s, v0.4s, v1.4s\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n                                        // kill: def $w1 killed $w0\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3432",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x8_t a = {0};\n    uint8x16_t t = {0};\n    uint8x8_t idx = {0};\n    uint8x8_t result = vqtbx1_u8(a, t, idx);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_3432.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #128\n\t.cfi_def_cfa_offset 128\n\tstp\tx29, x30, [sp, #112]            // 16-byte Folded Spill\n\tadd\tx29, sp, #112\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmovi\tv1.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-52]\n\tstr\td0, [sp, #48]\n\tstr\tq1, [sp, #32]\n\tstr\td0, [sp, #24]\n\tldr\td2, [sp, #48]\n\tldr\tq1, [sp, #32]\n\tldr\td0, [sp, #24]\n\tstur\td2, [x29, #-8]\n\tstur\tq1, [x29, #-32]\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-8]\n\tldur\tq1, [x29, #-32]\n\tldur\td2, [x29, #-40]\n\ttbx\tv0.8b, { v1.16b }, v2.8b\n\tstur\td0, [x29, #-48]\n\tldur\td0, [x29, #-48]\n\tstr\td0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 128\n\tldp\tx29, x30, [sp, #112]            // 16-byte Folded Reload\n\tadd\tsp, sp, #128\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "1952",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x8_t a = {0};\n    int8x8_t b = {0};\n    int8x8_t c = {0};\n    int8x8_t result = vbsl_s8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_1952.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tbsl\tv0.8b, v1.8b, v2.8b\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "1965",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    uint32x4_t b = {0};\n    uint32x4_t c = {0};\n    uint32x4_t result = vbslq_u32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_1965.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tbsl\tv0.16b, v1.16b, v2.16b\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3430",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int8x8_t a = {0};\n    int8x16_t t = {0};\n    uint8x8_t idx = {0};\n    int8x8_t result = vqtbx1_s8(a, t, idx);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_3430.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #128\n\t.cfi_def_cfa_offset 128\n\tstp\tx29, x30, [sp, #112]            // 16-byte Folded Spill\n\tadd\tx29, sp, #112\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmovi\tv1.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-52]\n\tstr\td0, [sp, #48]\n\tstr\tq1, [sp, #32]\n\tstr\td0, [sp, #24]\n\tldr\td2, [sp, #48]\n\tldr\tq1, [sp, #32]\n\tldr\td0, [sp, #24]\n\tstur\td2, [x29, #-8]\n\tstur\tq1, [x29, #-32]\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-8]\n\tldur\tq1, [x29, #-32]\n\tldur\td2, [x29, #-40]\n\ttbx\tv0.8b, { v1.16b }, v2.8b\n\tstur\td0, [x29, #-48]\n\tldur\td0, [x29, #-48]\n\tstr\td0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 128\n\tldp\tx29, x30, [sp, #112]            // 16-byte Folded Reload\n\tadd\tsp, sp, #128\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3546",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x2_t a = {0};\n    int32x2_t b = {0};\n    int32x2_t c = {0};\n    int32x2_t result = vqrdmlsh_s32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "532",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int8x16_t a = {0};\n    int8x16_t b = {0};\n    int8x16_t c = {0};\n    int8x16_t result = vabaq_s8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_532.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #224\n\t.cfi_def_cfa_offset 224\n\tstp\tx29, x30, [sp, #208]            // 16-byte Folded Spill\n\tadd\tx29, sp, #208\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #92]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-64]\n\tstur\tq1, [x29, #-80]\n\tstur\tq0, [x29, #-96]\n\tldur\tq0, [x29, #-64]\n\tldur\tq2, [x29, #-80]\n\tldur\tq1, [x29, #-96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tsabd\tv1.16b, v1.16b, v2.16b\n\tstur\tq1, [x29, #-48]\n\tldur\tq1, [x29, #-48]\n\tadd\tv0.16b, v0.16b, v1.16b\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 224\n\tldp\tx29, x30, [sp, #208]            // 16-byte Folded Reload\n\tadd\tsp, sp, #224\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "229",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int16x8_t b = {0};\n    int16x8_t c = {0};\n    int32x4_t result = vmlsl_high_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_229.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #336\n\t.cfi_def_cfa_offset 336\n\tstp\tx29, x30, [sp, #304]            // 16-byte Folded Spill\n\tstr\tx28, [sp, #320]                 // 8-byte Folded Spill\n\tadd\tx29, sp, #304\n\t.cfi_def_cfa w29, 32\n\t.cfi_offset w28, -16\n\t.cfi_offset w30, -24\n\t.cfi_offset w29, -32\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\tw8, [sp, #92]\n\tstr\tw8, [sp, #64]\n\tstr\tw8, [sp, #68]\n\tstr\tw8, [sp, #72]\n\tstr\tw8, [sp, #76]\n\tmovi\tv0.2d, #0000000000000000\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstr\tq2, [sp, #144]\n\tstr\tq1, [sp, #128]\n\tstr\tq0, [sp, #112]\n\tldr\tq2, [sp, #144]\n\tldr\tq0, [sp, #128]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-48]\n\text\tv0.16b, v0.16b, v0.16b, #8\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\td0, [x29, #-56]\n\tldur\td1, [x29, #-56]\n\tldr\tq0, [sp, #112]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\text\tv0.16b, v0.16b, v0.16b, #8\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\td0, [x29, #-88]\n\tldur\td0, [x29, #-88]\n\tstur\tq2, [x29, #-112]\n\tstur\td1, [x29, #-120]\n\tstur\td0, [x29, #-128]\n\tldur\tq0, [x29, #-112]\n\tldur\td2, [x29, #-120]\n\tldur\td1, [x29, #-128]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tsmull\tv1.4s, v1.4h, v2.4h\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-32]\n\tsub\tv0.4s, v0.4s, v1.4s\n\tstur\tq0, [x29, #-144]\n\tldur\tq0, [x29, #-144]\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n                                        // kill: def $w1 killed $w0\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 336\n\tldr\tx28, [sp, #320]                 // 8-byte Folded Reload\n\tldp\tx29, x30, [sp, #304]            // 16-byte Folded Reload\n\tadd\tsp, sp, #336\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w28\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "463",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x4_t r = {0};\n    uint32x4_t a = {0};\n    uint32x4_t b = {0};\n    uint16x8_t result = vsubhn_high_u32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_463.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tstr\twzr, [sp, #76]\n\tstr\td1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\td2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\td2, [x29, #-88]\n\tstr\tq1, [sp, #112]\n\tstr\tq0, [sp, #96]\n\tldur\td1, [x29, #-88]\n\tldr\tq2, [sp, #112]\n\tldr\tq0, [sp, #96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tsub\tv0.4s, v0.4s, v2.4s\n\tshrn\tv0.4h, v0.4s, #16\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstur\td0, [x29, #-56]\n\tldur\td2, [x29, #-48]\n\tldur\td0, [x29, #-56]\n                                        // implicit-def: $q1\n\tfmov\td1, d0\n                                        // implicit-def: $q0\n\tfmov\td0, d2\n\tmov\tv0.d[1], v1.d[0]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "533",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x4_t a = {0};\n    int16x4_t b = {0};\n    int16x4_t c = {0};\n    int16x4_t result = vaba_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_533.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #128\n\t.cfi_def_cfa_offset 128\n\tstp\tx29, x30, [sp, #112]            // 16-byte Folded Spill\n\tadd\tx29, sp, #112\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #52]\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tldr\td2, [sp, #40]\n\tldr\td1, [sp, #32]\n\tldr\td0, [sp, #24]\n\tstur\td2, [x29, #-32]\n\tstur\td1, [x29, #-40]\n\tstur\td0, [x29, #-48]\n\tldur\td0, [x29, #-32]\n\tldur\td2, [x29, #-40]\n\tldur\td1, [x29, #-48]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tsabd\tv1.4h, v1.4h, v2.4h\n\tstur\td1, [x29, #-24]\n\tldur\td1, [x29, #-24]\n\tadd\tv0.4h, v0.4h, v1.4h\n\tstr\td0, [sp, #56]\n\tldr\td0, [sp, #56]\n\tstr\td0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 128\n\tldp\tx29, x30, [sp, #112]            // 16-byte Folded Reload\n\tadd\tsp, sp, #128\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3952",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float32x4_t r = {0};\n    float32x4_t a = {0};\n    float32x4_t b = {0};\n    float32x4_t result = vcmlaq_rot180_f32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "553",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    uint16x8_t b = {0};\n    uint16x8_t c = {0};\n    uint32x4_t result = vabal_high_u16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_553.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #384\n\t.cfi_def_cfa_offset 384\n\tstp\tx29, x30, [sp, #352]            // 16-byte Folded Spill\n\tstr\tx28, [sp, #368]                 // 8-byte Folded Spill\n\tadd\tx29, sp, #352\n\t.cfi_def_cfa w29, 32\n\t.cfi_offset w28, -16\n\t.cfi_offset w30, -24\n\t.cfi_offset w29, -32\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv1.2d, #0000000000000000\n\tmovi\tv0.2d, #0000000000000000\n\tstr\twzr, [sp, #92]\n\tstr\tq1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstr\tq2, [sp, #144]\n\tstr\tq1, [sp, #128]\n\tstr\tq0, [sp, #112]\n\tldr\tq2, [sp, #144]\n\tldr\tq0, [sp, #128]\n\tstur\tq0, [x29, #-96]\n\tldur\tq0, [x29, #-96]\n\tldur\tq1, [x29, #-96]\n\text\tv1.16b, v0.16b, v1.16b, #8\n\tfmov\td0, d1\n\tmov\td1, v1.d[1]\n\tstur\td0, [x29, #-104]\n\tldur\td1, [x29, #-104]\n\tldr\tq0, [sp, #112]\n\tstur\tq0, [x29, #-128]\n\tldur\tq0, [x29, #-128]\n\tldur\tq3, [x29, #-128]\n\text\tv3.16b, v0.16b, v3.16b, #8\n\tfmov\td0, d3\n\tmov\td3, v3.d[1]\n\tstur\td0, [x29, #-136]\n\tldur\td0, [x29, #-136]\n\tstur\tq2, [x29, #-160]\n\tstur\td1, [x29, #-168]\n\tstr\td0, [sp, #176]\n\tldur\tq0, [x29, #-160]\n\tldur\td2, [x29, #-168]\n\tldr\td1, [sp, #176]\n\tstur\td2, [x29, #-56]\n\tstur\td1, [x29, #-64]\n\tldur\td2, [x29, #-56]\n\tldur\td1, [x29, #-64]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tuabd\tv1.4h, v1.4h, v2.4h\n\tstur\td1, [x29, #-24]\n\tldur\td1, [x29, #-24]\n\tstur\td1, [x29, #-32]\n\tldur\td1, [x29, #-32]\n\tushll\tv1.4s, v1.4h, #0\n\tstur\tq1, [x29, #-48]\n\tldur\tq1, [x29, #-48]\n\tstur\tq1, [x29, #-80]\n\tldur\tq1, [x29, #-80]\n\tadd\tv0.4s, v0.4s, v1.4s\n\tstr\tq0, [sp, #160]\n\tldr\tq0, [sp, #160]\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 384\n\tldr\tx28, [sp, #368]                 // 8-byte Folded Reload\n\tldp\tx29, x30, [sp, #352]            // 16-byte Folded Reload\n\tadd\tsp, sp, #384\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w28\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "193",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float64x2_t a = {0};\n    float64x2_t b = {0};\n    float64x2_t c = {0};\n    float64x2_t result = vmlaq_f64(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_193.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tldur\tq1, [x29, #-48]\n\tfmla\tv0.2d, v1.2d, v2.2d\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "220",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    uint16x8_t b = {0};\n    uint16x8_t c = {0};\n    uint32x4_t result = vmlal_high_u16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_220.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #336\n\t.cfi_def_cfa_offset 336\n\tstp\tx29, x30, [sp, #304]            // 16-byte Folded Spill\n\tstr\tx28, [sp, #320]                 // 8-byte Folded Spill\n\tadd\tx29, sp, #304\n\t.cfi_def_cfa w29, 32\n\t.cfi_offset w28, -16\n\t.cfi_offset w30, -24\n\t.cfi_offset w29, -32\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\tw8, [sp, #92]\n\tstr\tw8, [sp, #64]\n\tstr\tw8, [sp, #68]\n\tstr\tw8, [sp, #72]\n\tstr\tw8, [sp, #76]\n\tmovi\tv0.2d, #0000000000000000\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstr\tq2, [sp, #144]\n\tstr\tq1, [sp, #128]\n\tstr\tq0, [sp, #112]\n\tldr\tq2, [sp, #144]\n\tldr\tq0, [sp, #128]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-48]\n\text\tv0.16b, v0.16b, v0.16b, #8\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\td0, [x29, #-56]\n\tldur\td1, [x29, #-56]\n\tldr\tq0, [sp, #112]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\text\tv0.16b, v0.16b, v0.16b, #8\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\td0, [x29, #-88]\n\tldur\td0, [x29, #-88]\n\tstur\tq2, [x29, #-112]\n\tstur\td1, [x29, #-120]\n\tstur\td0, [x29, #-128]\n\tldur\tq0, [x29, #-112]\n\tldur\td2, [x29, #-120]\n\tldur\td1, [x29, #-128]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tumull\tv1.4s, v1.4h, v2.4h\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-32]\n\tadd\tv0.4s, v0.4s, v1.4s\n\tstur\tq0, [x29, #-144]\n\tldur\tq0, [x29, #-144]\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n                                        // kill: def $w1 killed $w0\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 336\n\tldr\tx28, [sp, #320]                 // 8-byte Folded Reload\n\tldp\tx29, x30, [sp, #304]            // 16-byte Folded Reload\n\tadd\tsp, sp, #336\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w28\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "89",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int8x8_t r = {0};\n    int16x8_t a = {0};\n    int16x8_t b = {0};\n    int8x16_t result = vraddhn_high_s16(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_89.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #76]\n\tstr\td1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\td2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\td2, [x29, #-88]\n\tstr\tq1, [sp, #112]\n\tstr\tq0, [sp, #96]\n\tldur\td1, [x29, #-88]\n\tldr\tq2, [sp, #112]\n\tldr\tq0, [sp, #96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\traddhn\tv0.8b, v0.8h, v2.8h\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstur\td0, [x29, #-56]\n\tldur\td2, [x29, #-48]\n\tldur\td0, [x29, #-56]\n                                        // implicit-def: $q1\n\tfmov\td1, d0\n                                        // implicit-def: $q0\n\tfmov\td0, d2\n\tmov\tv0.d[1], v1.d[0]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "541",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x2_t a = {0};\n    uint32x2_t b = {0};\n    uint32x2_t c = {0};\n    uint32x2_t result = vaba_u32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_541.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #128\n\t.cfi_def_cfa_offset 128\n\tstp\tx29, x30, [sp, #112]            // 16-byte Folded Spill\n\tadd\tx29, sp, #112\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstr\twzr, [sp, #52]\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tldr\td2, [sp, #40]\n\tldr\td1, [sp, #32]\n\tldr\td0, [sp, #24]\n\tstur\td2, [x29, #-32]\n\tstur\td1, [x29, #-40]\n\tstur\td0, [x29, #-48]\n\tldur\td0, [x29, #-32]\n\tldur\td2, [x29, #-40]\n\tldur\td1, [x29, #-48]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tuabd\tv1.2s, v1.2s, v2.2s\n\tstur\td1, [x29, #-24]\n\tldur\td1, [x29, #-24]\n\tadd\tv0.2s, v0.2s, v1.2s\n\tstr\td0, [sp, #56]\n\tldr\td0, [sp, #56]\n\tstr\td0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 128\n\tldp\tx29, x30, [sp, #112]            // 16-byte Folded Reload\n\tadd\tsp, sp, #128\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "206",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float32x2_t a = {0};\n    float32x2_t b = {0};\n    float32x2_t c = {0};\n    float32x2_t result = vmls_f32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_206.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tldur\td1, [x29, #-24]\n\tfmls\tv0.2s, v1.2s, v2.2s\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "225",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x8_t a = {0};\n    uint8x8_t b = {0};\n    uint8x8_t c = {0};\n    uint16x8_t result = vmlsl_u8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_225.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\tw8, [sp, #76]\n\tmovi\tv0.2d, #0000000000000000\n\tstr\tq0, [sp, #48]\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tldr\tq2, [sp, #48]\n\tldr\td1, [sp, #40]\n\tldr\td0, [sp, #32]\n\tstur\tq2, [x29, #-48]\n\tstur\td1, [x29, #-56]\n\tstur\td0, [x29, #-64]\n\tldur\tq0, [x29, #-48]\n\tldur\td2, [x29, #-56]\n\tldur\td1, [x29, #-64]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tumull\tv1.8h, v1.8b, v2.8b\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-32]\n\tsub\tv0.8h, v0.8h, v1.8h\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n                                        // kill: def $w1 killed $w0\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3945",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float32x2_t r = {0};\n    float32x2_t a = {0};\n    float32x2_t b = {0};\n    float32x2_t result = vcmla_rot90_f32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3889",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    uint32x4_t b = {0};\n    uint32x4_t c = {0};\n    uint32x4_t result = veor3q_u32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "204",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x2_t a = {0};\n    uint32x2_t b = {0};\n    uint32x2_t c = {0};\n    uint32x2_t result = vmls_u32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_204.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tmul\tv1.2s, v1.2s, v2.2s\n\tsub\tv0.2s, v0.2s, v1.2s\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "93",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x4_t r = {0};\n    uint32x4_t a = {0};\n    uint32x4_t b = {0};\n    uint16x8_t result = vraddhn_high_u32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_93.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tstr\twzr, [sp, #76]\n\tstr\td1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\td2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\td2, [x29, #-88]\n\tstr\tq1, [sp, #112]\n\tstr\tq0, [sp, #96]\n\tldur\td1, [x29, #-88]\n\tldr\tq2, [sp, #112]\n\tldr\tq0, [sp, #96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\traddhn\tv0.4h, v0.4s, v2.4s\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstur\td0, [x29, #-56]\n\tldur\td2, [x29, #-48]\n\tldur\td0, [x29, #-56]\n                                        // implicit-def: $q1\n\tfmov\td1, d0\n                                        // implicit-def: $q0\n\tfmov\td0, d2\n\tmov\tv0.d[1], v1.d[0]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "202",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x4_t a = {0};\n    uint16x4_t b = {0};\n    uint16x4_t c = {0};\n    uint16x4_t result = vmls_u16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_202.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tmul\tv1.4h, v1.4h, v2.4h\n\tsub\tv0.4h, v0.4h, v1.4h\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3953",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float64x2_t r = {0};\n    float64x2_t a = {0};\n    float64x2_t b = {0};\n    float64x2_t result = vcmlaq_rot180_f64(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3542",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x2_t a = {0};\n    int32x2_t b = {0};\n    int32x2_t c = {0};\n    int32x2_t result = vqrdmlah_s32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "460",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x4_t r = {0};\n    int32x4_t a = {0};\n    int32x4_t b = {0};\n    int16x8_t result = vsubhn_high_s32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_460.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tstr\twzr, [sp, #76]\n\tstr\td1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\td2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\td2, [x29, #-88]\n\tstr\tq1, [sp, #112]\n\tstr\tq0, [sp, #96]\n\tldur\td1, [x29, #-88]\n\tldr\tq2, [sp, #112]\n\tldr\tq0, [sp, #96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tsub\tv0.4s, v0.4s, v2.4s\n\tshrn\tv0.4h, v0.4s, #16\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstur\td0, [x29, #-56]\n\tldur\td2, [x29, #-48]\n\tldur\td0, [x29, #-56]\n                                        // implicit-def: $q1\n\tfmov\td1, d0\n                                        // implicit-def: $q0\n\tfmov\td0, d2\n\tmov\tv0.d[1], v1.d[0]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "1955",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x8_t a = {0};\n    int16x8_t b = {0};\n    int16x8_t c = {0};\n    int16x8_t result = vbslq_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_1955.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tbsl\tv0.16b, v1.16b, v2.16b\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3950",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float32x2_t r = {0};\n    float32x2_t a = {0};\n    float32x2_t b = {0};\n    float32x2_t result = vcmla_rot180_f32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "475",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x4_t r = {0};\n    uint32x4_t a = {0};\n    uint32x4_t b = {0};\n    uint16x8_t result = vrsubhn_high_u32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_475.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tstr\twzr, [sp, #76]\n\tstr\td1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\td2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\td2, [x29, #-88]\n\tstr\tq1, [sp, #112]\n\tstr\tq0, [sp, #96]\n\tldur\td1, [x29, #-88]\n\tldr\tq2, [sp, #112]\n\tldr\tq0, [sp, #96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\trsubhn\tv0.4h, v0.4s, v2.4s\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstur\td0, [x29, #-56]\n\tldur\td2, [x29, #-48]\n\tldur\td0, [x29, #-56]\n                                        // implicit-def: $q1\n\tfmov\td1, d0\n                                        // implicit-def: $q0\n\tfmov\td0, d2\n\tmov\tv0.d[1], v1.d[0]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "474",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x8_t r = {0};\n    uint16x8_t a = {0};\n    uint16x8_t b = {0};\n    uint8x16_t result = vrsubhn_high_u16(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_474.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #76]\n\tstr\td1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\td2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\td2, [x29, #-88]\n\tstr\tq1, [sp, #112]\n\tstr\tq0, [sp, #96]\n\tldur\td1, [x29, #-88]\n\tldr\tq2, [sp, #112]\n\tldr\tq0, [sp, #96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\trsubhn\tv0.8b, v0.8h, v2.8h\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstur\td0, [x29, #-56]\n\tldur\td2, [x29, #-48]\n\tldur\td0, [x29, #-56]\n                                        // implicit-def: $q1\n\tfmov\td1, d0\n                                        // implicit-def: $q0\n\tfmov\td0, d2\n\tmov\tv0.d[1], v1.d[0]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "531",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int8x8_t a = {0};\n    int8x8_t b = {0};\n    int8x8_t c = {0};\n    int8x8_t result = vaba_s8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_531.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #128\n\t.cfi_def_cfa_offset 128\n\tstp\tx29, x30, [sp, #112]            // 16-byte Folded Spill\n\tadd\tx29, sp, #112\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #52]\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tldr\td2, [sp, #40]\n\tldr\td1, [sp, #32]\n\tldr\td0, [sp, #24]\n\tstur\td2, [x29, #-32]\n\tstur\td1, [x29, #-40]\n\tstur\td0, [x29, #-48]\n\tldur\td0, [x29, #-32]\n\tldur\td2, [x29, #-40]\n\tldur\td1, [x29, #-48]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tsabd\tv1.8b, v1.8b, v2.8b\n\tstur\td1, [x29, #-24]\n\tldur\td1, [x29, #-24]\n\tadd\tv0.8b, v0.8b, v1.8b\n\tstr\td0, [sp, #56]\n\tldr\td0, [sp, #56]\n\tstr\td0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 128\n\tldp\tx29, x30, [sp, #112]            // 16-byte Folded Reload\n\tadd\tsp, sp, #128\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "226",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    uint16x4_t b = {0};\n    uint16x4_t c = {0};\n    uint32x4_t result = vmlsl_u16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_226.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\tw8, [sp, #76]\n\tstr\tw8, [sp, #48]\n\tstr\tw8, [sp, #52]\n\tstr\tw8, [sp, #56]\n\tstr\tw8, [sp, #60]\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tldr\tq2, [sp, #48]\n\tldr\td1, [sp, #40]\n\tldr\td0, [sp, #32]\n\tstur\tq2, [x29, #-48]\n\tstur\td1, [x29, #-56]\n\tstur\td0, [x29, #-64]\n\tldur\tq0, [x29, #-48]\n\tldur\td2, [x29, #-56]\n\tldur\td1, [x29, #-64]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tumull\tv1.4s, v1.4h, v2.4h\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-32]\n\tsub\tv0.4s, v0.4s, v1.4s\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n                                        // kill: def $w1 killed $w0\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "546",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x8_t a = {0};\n    uint8x8_t b = {0};\n    uint8x8_t c = {0};\n    uint16x8_t result = vabal_u8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_546.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #224\n\t.cfi_def_cfa_offset 224\n\tstp\tx29, x30, [sp, #208]            // 16-byte Folded Spill\n\tadd\tx29, sp, #208\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv1.2d, #0000000000000000\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #76]\n\tstr\tq1, [sp, #48]\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tldr\tq2, [sp, #48]\n\tldr\td1, [sp, #40]\n\tldr\td0, [sp, #32]\n\tstur\tq2, [x29, #-96]\n\tstr\td1, [sp, #104]\n\tstr\td0, [sp, #96]\n\tldur\tq0, [x29, #-96]\n\tldr\td2, [sp, #104]\n\tldr\td1, [sp, #96]\n\tstur\td2, [x29, #-56]\n\tstur\td1, [x29, #-64]\n\tldur\td2, [x29, #-56]\n\tldur\td1, [x29, #-64]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tuabd\tv1.8b, v1.8b, v2.8b\n\tstur\td1, [x29, #-24]\n\tldur\td1, [x29, #-24]\n\tstur\td1, [x29, #-32]\n\tldur\td1, [x29, #-32]\n\tushll\tv1.8h, v1.8b, #0\n\tstur\tq1, [x29, #-48]\n\tldur\tq1, [x29, #-48]\n\tstur\tq1, [x29, #-80]\n\tldur\tq1, [x29, #-80]\n\tadd\tv0.8h, v0.8h, v1.8h\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 224\n\tldp\tx29, x30, [sp, #208]            // 16-byte Folded Reload\n\tadd\tsp, sp, #224\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "534",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x8_t a = {0};\n    int16x8_t b = {0};\n    int16x8_t c = {0};\n    int16x8_t result = vabaq_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_534.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #224\n\t.cfi_def_cfa_offset 224\n\tstp\tx29, x30, [sp, #208]            // 16-byte Folded Spill\n\tadd\tx29, sp, #208\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #92]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-64]\n\tstur\tq1, [x29, #-80]\n\tstur\tq0, [x29, #-96]\n\tldur\tq0, [x29, #-64]\n\tldur\tq2, [x29, #-80]\n\tldur\tq1, [x29, #-96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tsabd\tv1.8h, v1.8h, v2.8h\n\tstur\tq1, [x29, #-48]\n\tldur\tq1, [x29, #-48]\n\tadd\tv0.8h, v0.8h, v1.8h\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 224\n\tldp\tx29, x30, [sp, #208]            // 16-byte Folded Reload\n\tadd\tsp, sp, #224\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3541",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x4_t a = {0};\n    int16x4_t b = {0};\n    int16x4_t c = {0};\n    int16x4_t result = vqrdmlah_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "4019",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t r = {0};\n    uint8x16_t a = {0};\n    int8x16_t b = {0};\n    int32x4_t result = vusdotq_s32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "4011",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t r = {0};\n    int8x16_t a = {0};\n    int8x16_t b = {0};\n    int32x4_t result = vmmlaq_s32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "538",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x16_t a = {0};\n    uint8x16_t b = {0};\n    uint8x16_t c = {0};\n    uint8x16_t result = vabaq_u8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_538.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #224\n\t.cfi_def_cfa_offset 224\n\tstp\tx29, x30, [sp, #208]            // 16-byte Folded Spill\n\tadd\tx29, sp, #208\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #92]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-64]\n\tstur\tq1, [x29, #-80]\n\tstur\tq0, [x29, #-96]\n\tldur\tq0, [x29, #-64]\n\tldur\tq2, [x29, #-80]\n\tldur\tq1, [x29, #-96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tuabd\tv1.16b, v1.16b, v2.16b\n\tstur\tq1, [x29, #-48]\n\tldur\tq1, [x29, #-48]\n\tadd\tv0.16b, v0.16b, v1.16b\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 224\n\tldp\tx29, x30, [sp, #208]            // 16-byte Folded Reload\n\tadd\tsp, sp, #224\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "253",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float64x2_t a = {0};\n    float64x2_t b = {0};\n    float64x2_t c = {0};\n    float64x2_t result = vfmsq_f64(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_253.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #92]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-80]\n\tstur\tq1, [x29, #-96]\n\tstr\tq0, [sp, #112]\n\tldur\tq2, [x29, #-80]\n\tldur\tq0, [x29, #-96]\n\tfneg\tv1.2d, v0.2d\n\tldr\tq0, [sp, #112]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tldur\tq1, [x29, #-48]\n\tfmla\tv0.2d, v1.2d, v2.2d\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3371",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x8_t a = {0};\n    uint8x8_t b = {0};\n    uint8x8_t idx = {0};\n    uint8x8_t result = vtbx1_u8(a, b, idx);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_3371.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmovi\tv3.8b, #8\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tldur\td0, [x29, #-24]\n\tfmov\td2, d2\n                                        // kill: def $q2 killed $d2\n\ttbl\tv2.8b, { v2.16b }, v0.8b\n\tcmhs\tv0.8b, v0.8b, v3.8b\n\tbsl\tv0.8b, v1.8b, v2.8b\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "217",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int16x8_t b = {0};\n    int16x8_t c = {0};\n    int32x4_t result = vmlal_high_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_217.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #336\n\t.cfi_def_cfa_offset 336\n\tstp\tx29, x30, [sp, #304]            // 16-byte Folded Spill\n\tstr\tx28, [sp, #320]                 // 8-byte Folded Spill\n\tadd\tx29, sp, #304\n\t.cfi_def_cfa w29, 32\n\t.cfi_offset w28, -16\n\t.cfi_offset w30, -24\n\t.cfi_offset w29, -32\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\tw8, [sp, #92]\n\tstr\tw8, [sp, #64]\n\tstr\tw8, [sp, #68]\n\tstr\tw8, [sp, #72]\n\tstr\tw8, [sp, #76]\n\tmovi\tv0.2d, #0000000000000000\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstr\tq2, [sp, #144]\n\tstr\tq1, [sp, #128]\n\tstr\tq0, [sp, #112]\n\tldr\tq2, [sp, #144]\n\tldr\tq0, [sp, #128]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-48]\n\text\tv0.16b, v0.16b, v0.16b, #8\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\td0, [x29, #-56]\n\tldur\td1, [x29, #-56]\n\tldr\tq0, [sp, #112]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\text\tv0.16b, v0.16b, v0.16b, #8\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\td0, [x29, #-88]\n\tldur\td0, [x29, #-88]\n\tstur\tq2, [x29, #-112]\n\tstur\td1, [x29, #-120]\n\tstur\td0, [x29, #-128]\n\tldur\tq0, [x29, #-112]\n\tldur\td2, [x29, #-120]\n\tldur\td1, [x29, #-128]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tsmull\tv1.4s, v1.4h, v2.4h\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-32]\n\tadd\tv0.4s, v0.4s, v1.4s\n\tstur\tq0, [x29, #-144]\n\tldur\tq0, [x29, #-144]\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n                                        // kill: def $w1 killed $w0\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 336\n\tldr\tx28, [sp, #320]                 // 8-byte Folded Reload\n\tldp\tx29, x30, [sp, #304]            // 16-byte Folded Reload\n\tadd\tsp, sp, #336\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w28\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "187",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x8_t a = {0};\n    uint16x8_t b = {0};\n    uint16x8_t c = {0};\n    uint16x8_t result = vmlaq_u16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_187.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tmul\tv1.8h, v1.8h, v2.8h\n\tadd\tv0.8h, v0.8h, v1.8h\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "194",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int8x8_t a = {0};\n    int8x8_t b = {0};\n    int8x8_t c = {0};\n    int8x8_t result = vmls_s8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_194.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tmul\tv1.8b, v1.8b, v2.8b\n\tsub\tv0.8b, v0.8b, v1.8b\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "188",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x2_t a = {0};\n    uint32x2_t b = {0};\n    uint32x2_t c = {0};\n    uint32x2_t result = vmla_u32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_188.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tmul\tv1.2s, v1.2s, v2.2s\n\tadd\tv0.2s, v0.2s, v1.2s\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3878",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    uint32x4_t b = {0};\n    uint32x4_t c = {0};\n    uint32x4_t result = vsm3ss1q_u32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3958",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float64x2_t r = {0};\n    float64x2_t a = {0};\n    float64x2_t b = {0};\n    float64x2_t result = vcmlaq_rot270_f64(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "223",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int16x4_t b = {0};\n    int16x4_t c = {0};\n    int32x4_t result = vmlsl_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_223.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\tw8, [sp, #76]\n\tstr\tw8, [sp, #48]\n\tstr\tw8, [sp, #52]\n\tstr\tw8, [sp, #56]\n\tstr\tw8, [sp, #60]\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tldr\tq2, [sp, #48]\n\tldr\td1, [sp, #40]\n\tldr\td0, [sp, #32]\n\tstur\tq2, [x29, #-48]\n\tstur\td1, [x29, #-56]\n\tstur\td0, [x29, #-64]\n\tldur\tq0, [x29, #-48]\n\tldur\td2, [x29, #-56]\n\tldur\td1, [x29, #-64]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tsmull\tv1.4s, v1.4h, v2.4h\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-32]\n\tsub\tv0.4s, v0.4s, v1.4s\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n                                        // kill: def $w1 killed $w0\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3901",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int8x16_t a = {0};\n    int8x16_t b = {0};\n    int8x16_t c = {0};\n    int8x16_t result = vbcaxq_s8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "290",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int16x4_t b = {0};\n    int16x4_t c = {0};\n    int32x4_t result = vqdmlsl_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_290.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #144\n\t.cfi_def_cfa_offset 144\n\tstp\tx29, x30, [sp, #128]            // 16-byte Folded Spill\n\tadd\tx29, sp, #128\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv1.2d, #0000000000000000\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\twzr, [x29, #-52]\n\tstr\tq1, [sp, #48]\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tldr\tq2, [sp, #48]\n\tldr\td1, [sp, #40]\n\tldr\td0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\td1, [x29, #-24]\n\tstur\td0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\td1, [x29, #-24]\n\tldur\td2, [x29, #-32]\n\tsqdmlsl\tv0.4s, v1.4h, v2.4h\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-48]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 144\n\tldp\tx29, x30, [sp, #128]            // 16-byte Folded Reload\n\tadd\tsp, sp, #144\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3891",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int8x16_t a = {0};\n    int8x16_t b = {0};\n    int8x16_t c = {0};\n    int8x16_t result = veor3q_s8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "228",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x8_t a = {0};\n    int8x16_t b = {0};\n    int8x16_t c = {0};\n    int16x8_t result = vmlsl_high_s8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_228.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #336\n\t.cfi_def_cfa_offset 336\n\tstp\tx29, x30, [sp, #304]            // 16-byte Folded Spill\n\tstr\tx28, [sp, #320]                 // 8-byte Folded Spill\n\tadd\tx29, sp, #304\n\t.cfi_def_cfa w29, 32\n\t.cfi_offset w28, -16\n\t.cfi_offset w30, -24\n\t.cfi_offset w29, -32\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\tw8, [sp, #92]\n\tmovi\tv0.2d, #0000000000000000\n\tstr\tq0, [sp, #64]\n\tmovi\tv0.2d, #0000000000000000\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstr\tq2, [sp, #144]\n\tstr\tq1, [sp, #128]\n\tstr\tq0, [sp, #112]\n\tldr\tq2, [sp, #144]\n\tldr\tq0, [sp, #128]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-48]\n\text\tv0.16b, v0.16b, v0.16b, #8\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\td0, [x29, #-56]\n\tldur\td1, [x29, #-56]\n\tldr\tq0, [sp, #112]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\text\tv0.16b, v0.16b, v0.16b, #8\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\td0, [x29, #-88]\n\tldur\td0, [x29, #-88]\n\tstur\tq2, [x29, #-112]\n\tstur\td1, [x29, #-120]\n\tstur\td0, [x29, #-128]\n\tldur\tq0, [x29, #-112]\n\tldur\td2, [x29, #-120]\n\tldur\td1, [x29, #-128]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tsmull\tv1.8h, v1.8b, v2.8b\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-32]\n\tsub\tv0.8h, v0.8h, v1.8h\n\tstur\tq0, [x29, #-144]\n\tldur\tq0, [x29, #-144]\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n                                        // kill: def $w1 killed $w0\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 336\n\tldr\tx28, [sp, #320]                 // 8-byte Folded Reload\n\tldp\tx29, x30, [sp, #304]            // 16-byte Folded Reload\n\tadd\tsp, sp, #336\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w28\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3943",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float64x2_t r = {0};\n    float64x2_t a = {0};\n    float64x2_t b = {0};\n    float64x2_t result = vcmlaq_f64(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3940",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float32x2_t r = {0};\n    float32x2_t a = {0};\n    float32x2_t b = {0};\n    float32x2_t result = vcmla_f32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "1956",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x2_t a = {0};\n    int32x2_t b = {0};\n    int32x2_t c = {0};\n    int32x2_t result = vbsl_s32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_1956.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tbsl\tv0.8b, v1.8b, v2.8b\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3892",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x8_t a = {0};\n    int16x8_t b = {0};\n    int16x8_t c = {0};\n    int16x8_t result = veor3q_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3862",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x2_t r = {0};\n    uint8x8_t a = {0};\n    uint8x8_t b = {0};\n    uint32x2_t result = vdot_u32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3544",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int32x4_t b = {0};\n    int32x4_t c = {0};\n    int32x4_t result = vqrdmlahq_s32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3431",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int8x16_t a = {0};\n    int8x16_t t = {0};\n    uint8x16_t idx = {0};\n    int8x16_t result = vqtbx1q_s8(a, t, idx);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_3431.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\ttbx\tv0.16b, { v1.16b }, v2.16b\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "189",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    uint32x4_t b = {0};\n    uint32x4_t c = {0};\n    uint32x4_t result = vmlaq_u32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_189.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tmul\tv1.4s, v1.4s, v2.4s\n\tadd\tv0.4s, v0.4s, v1.4s\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3523",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t tw0_3 = {0};\n    uint32x4_t w8_11 = {0};\n    uint32x4_t w12_15 = {0};\n    uint32x4_t result = vsha256su1q_u32(tw0_3, w8_11, w12_15);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "544",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int16x4_t b = {0};\n    int16x4_t c = {0};\n    int32x4_t result = vabal_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_544.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #224\n\t.cfi_def_cfa_offset 224\n\tstp\tx29, x30, [sp, #208]            // 16-byte Folded Spill\n\tadd\tx29, sp, #208\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv1.2d, #0000000000000000\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstr\twzr, [sp, #76]\n\tstr\tq1, [sp, #48]\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tldr\tq2, [sp, #48]\n\tldr\td1, [sp, #40]\n\tldr\td0, [sp, #32]\n\tstur\tq2, [x29, #-96]\n\tstr\td1, [sp, #104]\n\tstr\td0, [sp, #96]\n\tldur\tq0, [x29, #-96]\n\tldr\td2, [sp, #104]\n\tldr\td1, [sp, #96]\n\tstur\td2, [x29, #-56]\n\tstur\td1, [x29, #-64]\n\tldur\td2, [x29, #-56]\n\tldur\td1, [x29, #-64]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tsabd\tv1.4h, v1.4h, v2.4h\n\tstur\td1, [x29, #-24]\n\tldur\td1, [x29, #-24]\n\tstur\td1, [x29, #-32]\n\tldur\td1, [x29, #-32]\n\tushll\tv1.4s, v1.4h, #0\n\tstur\tq1, [x29, #-48]\n\tldur\tq1, [x29, #-48]\n\tstur\tq1, [x29, #-80]\n\tldur\tq1, [x29, #-80]\n\tadd\tv0.4s, v0.4s, v1.4s\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 224\n\tldp\tx29, x30, [sp, #208]            // 16-byte Folded Reload\n\tadd\tsp, sp, #224\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3957",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float32x4_t r = {0};\n    float32x4_t a = {0};\n    float32x4_t b = {0};\n    float32x4_t result = vcmlaq_rot270_f32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3887",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint8x16_t a = {0};\n    uint8x16_t b = {0};\n    uint8x16_t c = {0};\n    uint8x16_t result = veor3q_u8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3548",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int32x4_t b = {0};\n    int32x4_t c = {0};\n    int32x4_t result = vqrdmlshq_s32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "1964",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x2_t a = {0};\n    uint32x2_t b = {0};\n    uint32x2_t c = {0};\n    uint32x2_t result = vbsl_u32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_1964.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tbsl\tv0.8b, v1.8b, v2.8b\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "199",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int32x4_t b = {0};\n    int32x4_t c = {0};\n    int32x4_t result = vmlsq_s32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_199.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tmul\tv1.4s, v1.4s, v2.4s\n\tsub\tv0.4s, v0.4s, v1.4s\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3898",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x8_t a = {0};\n    uint16x8_t b = {0};\n    uint16x8_t c = {0};\n    uint16x8_t result = vbcaxq_u16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "209",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float64x2_t a = {0};\n    float64x2_t b = {0};\n    float64x2_t c = {0};\n    float64x2_t result = vmlsq_f64(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_209.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tldur\tq1, [x29, #-48]\n\tfmls\tv0.2d, v1.2d, v2.2d\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "234",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float32x2_t a = {0};\n    float32x2_t b = {0};\n    float32x2_t c = {0};\n    float32x2_t result = vfma_f32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_234.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tldur\td1, [x29, #-24]\n\tfmla\tv0.2s, v1.2s, v2.2s\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "179",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int8x16_t a = {0};\n    int8x16_t b = {0};\n    int8x16_t c = {0};\n    int8x16_t result = vmlaq_s8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_179.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tmul\tv1.16b, v1.16b, v2.16b\n\tadd\tv0.16b, v0.16b, v1.16b\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "81",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x4_t r = {0};\n    uint32x4_t a = {0};\n    uint32x4_t b = {0};\n    uint16x8_t result = vaddhn_high_u32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_81.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tfmov\td1, d0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tstr\twzr, [sp, #76]\n\tstr\td1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\td2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\td2, [x29, #-88]\n\tstr\tq1, [sp, #112]\n\tstr\tq0, [sp, #96]\n\tldur\td1, [x29, #-88]\n\tldr\tq2, [sp, #112]\n\tldr\tq0, [sp, #96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tadd\tv0.4s, v0.4s, v2.4s\n\tshrn\tv0.4h, v0.4s, #16\n\tstur\td0, [x29, #-40]\n\tldur\td0, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstur\td0, [x29, #-56]\n\tldur\td2, [x29, #-48]\n\tldur\td0, [x29, #-56]\n                                        // implicit-def: $q1\n\tfmov\td1, d0\n                                        // implicit-def: $q0\n\tfmov\td0, d2\n\tmov\tv0.d[1], v1.d[0]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "550",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int16x8_t b = {0};\n    int16x8_t c = {0};\n    int32x4_t result = vabal_high_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_550.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #384\n\t.cfi_def_cfa_offset 384\n\tstp\tx29, x30, [sp, #352]            // 16-byte Folded Spill\n\tstr\tx28, [sp, #368]                 // 8-byte Folded Spill\n\tadd\tx29, sp, #352\n\t.cfi_def_cfa w29, 32\n\t.cfi_offset w28, -16\n\t.cfi_offset w30, -24\n\t.cfi_offset w29, -32\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv1.2d, #0000000000000000\n\tmovi\tv0.2d, #0000000000000000\n\tstr\twzr, [sp, #92]\n\tstr\tq1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstr\tq2, [sp, #144]\n\tstr\tq1, [sp, #128]\n\tstr\tq0, [sp, #112]\n\tldr\tq2, [sp, #144]\n\tldr\tq0, [sp, #128]\n\tstur\tq0, [x29, #-96]\n\tldur\tq0, [x29, #-96]\n\tldur\tq1, [x29, #-96]\n\text\tv1.16b, v0.16b, v1.16b, #8\n\tfmov\td0, d1\n\tmov\td1, v1.d[1]\n\tstur\td0, [x29, #-104]\n\tldur\td1, [x29, #-104]\n\tldr\tq0, [sp, #112]\n\tstur\tq0, [x29, #-128]\n\tldur\tq0, [x29, #-128]\n\tldur\tq3, [x29, #-128]\n\text\tv3.16b, v0.16b, v3.16b, #8\n\tfmov\td0, d3\n\tmov\td3, v3.d[1]\n\tstur\td0, [x29, #-136]\n\tldur\td0, [x29, #-136]\n\tstur\tq2, [x29, #-160]\n\tstur\td1, [x29, #-168]\n\tstr\td0, [sp, #176]\n\tldur\tq0, [x29, #-160]\n\tldur\td2, [x29, #-168]\n\tldr\td1, [sp, #176]\n\tstur\td2, [x29, #-56]\n\tstur\td1, [x29, #-64]\n\tldur\td2, [x29, #-56]\n\tldur\td1, [x29, #-64]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tsabd\tv1.4h, v1.4h, v2.4h\n\tstur\td1, [x29, #-24]\n\tldur\td1, [x29, #-24]\n\tstur\td1, [x29, #-32]\n\tldur\td1, [x29, #-32]\n\tushll\tv1.4s, v1.4h, #0\n\tstur\tq1, [x29, #-48]\n\tldur\tq1, [x29, #-48]\n\tstur\tq1, [x29, #-80]\n\tldur\tq1, [x29, #-80]\n\tadd\tv0.4s, v0.4s, v1.4s\n\tstr\tq0, [sp, #160]\n\tldr\tq0, [sp, #160]\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 384\n\tldr\tx28, [sp, #368]                 // 8-byte Folded Reload\n\tldp\tx29, x30, [sp, #352]            // 16-byte Folded Reload\n\tadd\tsp, sp, #384\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w28\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "251",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float32x4_t a = {0};\n    float32x4_t b = {0};\n    float32x4_t c = {0};\n    float32x4_t result = vfmsq_f32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_251.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #240\n\t.cfi_def_cfa_offset 240\n\tstp\tx29, x30, [sp, #224]            // 16-byte Folded Spill\n\tadd\tx29, sp, #224\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\twzr, [sp, #92]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-80]\n\tstur\tq1, [x29, #-96]\n\tstr\tq0, [sp, #112]\n\tldur\tq2, [x29, #-80]\n\tldur\tq0, [x29, #-96]\n\tfneg\tv1.4s, v0.4s\n\tldr\tq0, [sp, #112]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tldur\tq1, [x29, #-48]\n\tfmla\tv0.4s, v1.4s, v2.4s\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 240\n\tldp\tx29, x30, [sp, #224]            // 16-byte Folded Reload\n\tadd\tsp, sp, #240\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "198",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x2_t a = {0};\n    int32x2_t b = {0};\n    int32x2_t c = {0};\n    int32x2_t result = vmls_s32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_198.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tmul\tv1.2s, v1.2s, v2.2s\n\tsub\tv0.2s, v0.2s, v1.2s\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "250",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float32x2_t a = {0};\n    float32x2_t b = {0};\n    float32x2_t c = {0};\n    float32x2_t result = vfms_f32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_250.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #128\n\t.cfi_def_cfa_offset 128\n\tstp\tx29, x30, [sp, #112]            // 16-byte Folded Spill\n\tadd\tx29, sp, #112\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstr\twzr, [sp, #44]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-40]\n\tstur\td1, [x29, #-48]\n\tstr\td0, [sp, #56]\n\tldur\td2, [x29, #-40]\n\tldur\td0, [x29, #-48]\n\tfneg\tv1.2s, v0.2s\n\tldr\td0, [sp, #56]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tldur\td1, [x29, #-24]\n\tfmla\tv0.2s, v1.2s, v2.2s\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #48]\n\tldr\td0, [sp, #48]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 128\n\tldp\tx29, x30, [sp, #112]            // 16-byte Folded Reload\n\tadd\tsp, sp, #128\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "284",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int16x4_t b = {0};\n    int16x4_t c = {0};\n    int32x4_t result = vqdmlal_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_284.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #144\n\t.cfi_def_cfa_offset 144\n\tstp\tx29, x30, [sp, #128]            // 16-byte Folded Spill\n\tadd\tx29, sp, #128\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv1.2d, #0000000000000000\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\twzr, [x29, #-52]\n\tstr\tq1, [sp, #48]\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tldr\tq2, [sp, #48]\n\tldr\td1, [sp, #40]\n\tldr\td0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\td1, [x29, #-24]\n\tstur\td0, [x29, #-32]\n\tldur\tq0, [x29, #-16]\n\tldur\td1, [x29, #-24]\n\tldur\td2, [x29, #-32]\n\tsqdmlal\tv0.4s, v1.4h, v2.4h\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-48]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 144\n\tldp\tx29, x30, [sp, #128]            // 16-byte Folded Reload\n\tadd\tsp, sp, #144\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3547",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x8_t a = {0};\n    int16x8_t b = {0};\n    int16x8_t c = {0};\n    int16x8_t result = vqrdmlshq_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "214",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    uint16x4_t b = {0};\n    uint16x4_t c = {0};\n    uint32x4_t result = vmlal_u16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_214.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\tw8, [sp, #76]\n\tstr\tw8, [sp, #48]\n\tstr\tw8, [sp, #52]\n\tstr\tw8, [sp, #56]\n\tstr\tw8, [sp, #60]\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tldr\tq2, [sp, #48]\n\tldr\td1, [sp, #40]\n\tldr\td0, [sp, #32]\n\tstur\tq2, [x29, #-48]\n\tstur\td1, [x29, #-56]\n\tstur\td0, [x29, #-64]\n\tldur\tq0, [x29, #-48]\n\tldur\td2, [x29, #-56]\n\tldur\td1, [x29, #-64]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tumull\tv1.4s, v1.4h, v2.4h\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-32]\n\tadd\tv0.4s, v0.4s, v1.4s\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n                                        // kill: def $w1 killed $w0\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "231",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x8_t a = {0};\n    uint8x16_t b = {0};\n    uint8x16_t c = {0};\n    uint16x8_t result = vmlsl_high_u8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_231.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #336\n\t.cfi_def_cfa_offset 336\n\tstp\tx29, x30, [sp, #304]            // 16-byte Folded Spill\n\tstr\tx28, [sp, #320]                 // 8-byte Folded Spill\n\tadd\tx29, sp, #304\n\t.cfi_def_cfa w29, 32\n\t.cfi_offset w28, -16\n\t.cfi_offset w30, -24\n\t.cfi_offset w29, -32\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\tw8, [sp, #92]\n\tmovi\tv0.2d, #0000000000000000\n\tstr\tq0, [sp, #64]\n\tmovi\tv0.2d, #0000000000000000\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstr\tq2, [sp, #144]\n\tstr\tq1, [sp, #128]\n\tstr\tq0, [sp, #112]\n\tldr\tq2, [sp, #144]\n\tldr\tq0, [sp, #128]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-48]\n\text\tv0.16b, v0.16b, v0.16b, #8\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\td0, [x29, #-56]\n\tldur\td1, [x29, #-56]\n\tldr\tq0, [sp, #112]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\text\tv0.16b, v0.16b, v0.16b, #8\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\td0, [x29, #-88]\n\tldur\td0, [x29, #-88]\n\tstur\tq2, [x29, #-112]\n\tstur\td1, [x29, #-120]\n\tstur\td0, [x29, #-128]\n\tldur\tq0, [x29, #-112]\n\tldur\td2, [x29, #-120]\n\tldur\td1, [x29, #-128]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tumull\tv1.8h, v1.8b, v2.8b\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-32]\n\tsub\tv0.8h, v0.8h, v1.8h\n\tstur\tq0, [x29, #-144]\n\tldur\tq0, [x29, #-144]\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n                                        // kill: def $w1 killed $w0\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 336\n\tldr\tx28, [sp, #320]                 // 8-byte Folded Reload\n\tldp\tx29, x30, [sp, #304]            // 16-byte Folded Reload\n\tadd\tsp, sp, #336\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w28\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "1957",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    int32x4_t b = {0};\n    int32x4_t c = {0};\n    int32x4_t result = vbslq_s32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_1957.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tstur\twzr, [x29, #-68]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-32]\n\tldur\tq2, [x29, #-48]\n\tbsl\tv0.16b, v1.16b, v2.16b\n\tstur\tq0, [x29, #-64]\n\tldur\tq0, [x29, #-64]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "196",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x4_t a = {0};\n    int16x4_t b = {0};\n    int16x4_t c = {0};\n    int16x4_t result = vmls_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_196.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tmul\tv1.4h, v1.4h, v2.4h\n\tsub\tv0.4h, v0.4h, v1.4h\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "542",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint32x4_t a = {0};\n    uint32x4_t b = {0};\n    uint32x4_t c = {0};\n    uint32x4_t result = vabaq_u32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_542.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #224\n\t.cfi_def_cfa_offset 224\n\tstp\tx29, x30, [sp, #208]            // 16-byte Folded Spill\n\tadd\tx29, sp, #208\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n\tstr\twzr, [sp, #92]\n\tstr\tq0, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-64]\n\tstur\tq1, [x29, #-80]\n\tstur\tq0, [x29, #-96]\n\tldur\tq0, [x29, #-64]\n\tldur\tq2, [x29, #-80]\n\tldur\tq1, [x29, #-96]\n\tstur\tq2, [x29, #-16]\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-16]\n\tldur\tq2, [x29, #-32]\n\tuabd\tv1.4s, v1.4s, v2.4s\n\tstur\tq1, [x29, #-48]\n\tldur\tq1, [x29, #-48]\n\tadd\tv0.4s, v0.4s, v1.4s\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 224\n\tldp\tx29, x30, [sp, #208]            // 16-byte Folded Reload\n\tadd\tsp, sp, #224\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "219",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x8_t a = {0};\n    uint8x16_t b = {0};\n    uint8x16_t c = {0};\n    uint16x8_t result = vmlal_high_u8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_219.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #336\n\t.cfi_def_cfa_offset 336\n\tstp\tx29, x30, [sp, #304]            // 16-byte Folded Spill\n\tstr\tx28, [sp, #320]                 // 8-byte Folded Spill\n\tadd\tx29, sp, #304\n\t.cfi_def_cfa w29, 32\n\t.cfi_offset w28, -16\n\t.cfi_offset w30, -24\n\t.cfi_offset w29, -32\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\tw8, [sp, #92]\n\tmovi\tv0.2d, #0000000000000000\n\tstr\tq0, [sp, #64]\n\tmovi\tv0.2d, #0000000000000000\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstr\tq2, [sp, #144]\n\tstr\tq1, [sp, #128]\n\tstr\tq0, [sp, #112]\n\tldr\tq2, [sp, #144]\n\tldr\tq0, [sp, #128]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-48]\n\text\tv0.16b, v0.16b, v0.16b, #8\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\td0, [x29, #-56]\n\tldur\td1, [x29, #-56]\n\tldr\tq0, [sp, #112]\n\tstur\tq0, [x29, #-80]\n\tldur\tq0, [x29, #-80]\n\text\tv0.16b, v0.16b, v0.16b, #8\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstur\td0, [x29, #-88]\n\tldur\td0, [x29, #-88]\n\tstur\tq2, [x29, #-112]\n\tstur\td1, [x29, #-120]\n\tstur\td0, [x29, #-128]\n\tldur\tq0, [x29, #-112]\n\tldur\td2, [x29, #-120]\n\tldur\td1, [x29, #-128]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tumull\tv1.8h, v1.8b, v2.8b\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-32]\n\tadd\tv0.8h, v0.8h, v1.8h\n\tstur\tq0, [x29, #-144]\n\tldur\tq0, [x29, #-144]\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n                                        // kill: def $w1 killed $w0\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 336\n\tldr\tx28, [sp, #320]                 // 8-byte Folded Reload\n\tldp\tx29, x30, [sp, #304]            // 16-byte Folded Reload\n\tadd\tsp, sp, #336\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w28\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3948",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float64x2_t r = {0};\n    float64x2_t a = {0};\n    float64x2_t b = {0};\n    float64x2_t result = vcmlaq_rot90_f64(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "180",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int16x4_t a = {0};\n    int16x4_t b = {0};\n    int16x4_t c = {0};\n    int16x4_t result = vmla_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_180.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td0, [x29, #-8]\n\tldur\td1, [x29, #-16]\n\tldur\td2, [x29, #-24]\n\tmul\tv1.4h, v1.4h, v2.4h\n\tadd\tv0.4h, v0.4h, v1.4h\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "294",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x4_t a = {0};\n    int16x8_t b = {0};\n    int16x8_t c = {0};\n    int32x4_t result = vqdmlsl_high_s16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_294.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #304\n\t.cfi_def_cfa_offset 304\n\tstp\tx29, x30, [sp, #272]            // 16-byte Folded Spill\n\tstr\tx28, [sp, #288]                 // 8-byte Folded Spill\n\tadd\tx29, sp, #272\n\t.cfi_def_cfa w29, 32\n\t.cfi_offset w28, -16\n\t.cfi_offset w30, -24\n\t.cfi_offset w29, -32\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv1.2d, #0000000000000000\n\tmovi\tv0.2d, #0000000000000000\n\tstr\twzr, [sp, #92]\n\tstr\tq1, [sp, #64]\n\tstr\tq0, [sp, #48]\n\tstr\tq0, [sp, #32]\n\tldr\tq2, [sp, #64]\n\tldr\tq1, [sp, #48]\n\tldr\tq0, [sp, #32]\n\tstur\tq2, [x29, #-128]\n\tstr\tq1, [sp, #128]\n\tstr\tq0, [sp, #112]\n\tldur\tq2, [x29, #-128]\n\tldr\tq0, [sp, #128]\n\tstur\tq0, [x29, #-16]\n\tldur\tq0, [x29, #-16]\n\tldur\tq1, [x29, #-16]\n\text\tv1.16b, v0.16b, v1.16b, #8\n\tfmov\td0, d1\n\tmov\td1, v1.d[1]\n\tstur\td0, [x29, #-24]\n\tldur\td1, [x29, #-24]\n\tldr\tq0, [sp, #112]\n\tstur\tq0, [x29, #-48]\n\tldur\tq0, [x29, #-48]\n\tldur\tq3, [x29, #-48]\n\text\tv3.16b, v0.16b, v3.16b, #8\n\tfmov\td0, d3\n\tmov\td3, v3.d[1]\n\tstur\td0, [x29, #-56]\n\tldur\td0, [x29, #-56]\n\tstur\tq2, [x29, #-80]\n\tstur\td1, [x29, #-88]\n\tstur\td0, [x29, #-96]\n\tldur\tq0, [x29, #-80]\n\tldur\td1, [x29, #-88]\n\tldur\td2, [x29, #-96]\n\tsqdmlsl\tv0.4s, v1.4h, v2.4h\n\tstur\tq0, [x29, #-112]\n\tldur\tq0, [x29, #-112]\n\tstr\tq0, [sp, #96]\n\tldr\tq0, [sp, #96]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 304\n\tldr\tx28, [sp, #288]                 // 8-byte Folded Reload\n\tldp\tx29, x30, [sp, #272]            // 16-byte Folded Reload\n\tadd\tsp, sp, #304\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w28\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3888",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x8_t a = {0};\n    uint16x8_t b = {0};\n    uint16x8_t c = {0};\n    uint16x8_t result = veor3q_u16(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "3942",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    float32x4_t r = {0};\n    float32x4_t a = {0};\n    float32x4_t b = {0};\n    float32x4_t result = vcmlaq_f32(r, a, b);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": ""
    },
    {
        "id": "535",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int32x2_t a = {0};\n    int32x2_t b = {0};\n    int32x2_t c = {0};\n    int32x2_t result = vaba_s32(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_535.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #128\n\t.cfi_def_cfa_offset 128\n\tstp\tx29, x30, [sp, #112]            // 16-byte Folded Spill\n\tadd\tx29, sp, #112\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstr\twzr, [sp, #52]\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tldr\td2, [sp, #40]\n\tldr\td1, [sp, #32]\n\tldr\td0, [sp, #24]\n\tstur\td2, [x29, #-32]\n\tstur\td1, [x29, #-40]\n\tstur\td0, [x29, #-48]\n\tldur\td0, [x29, #-32]\n\tldur\td2, [x29, #-40]\n\tldur\td1, [x29, #-48]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tsabd\tv1.2s, v1.2s, v2.2s\n\tstur\td1, [x29, #-24]\n\tldur\td1, [x29, #-24]\n\tadd\tv0.2s, v0.2s, v1.2s\n\tstr\td0, [sp, #56]\n\tldr\td0, [sp, #56]\n\tstr\td0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 128\n\tldp\tx29, x30, [sp, #112]            // 16-byte Folded Reload\n\tadd\tsp, sp, #128\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "213",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    uint16x8_t a = {0};\n    uint8x8_t b = {0};\n    uint8x8_t c = {0};\n    uint16x8_t result = vmlal_u8(a, b, c);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_213.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #176\n\t.cfi_def_cfa_offset 176\n\tstp\tx29, x30, [sp, #160]            // 16-byte Folded Spill\n\tadd\tx29, sp, #160\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #12]                   // 4-byte Folded Spill\n\tstr\tw8, [sp, #76]\n\tmovi\tv0.2d, #0000000000000000\n\tstr\tq0, [sp, #48]\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tstr\td0, [sp, #40]\n\tstr\td0, [sp, #32]\n\tldr\tq2, [sp, #48]\n\tldr\td1, [sp, #40]\n\tldr\td0, [sp, #32]\n\tstur\tq2, [x29, #-48]\n\tstur\td1, [x29, #-56]\n\tstur\td0, [x29, #-64]\n\tldur\tq0, [x29, #-48]\n\tldur\td2, [x29, #-56]\n\tldur\td1, [x29, #-64]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tumull\tv1.8h, v1.8b, v2.8b\n\tstur\tq1, [x29, #-32]\n\tldur\tq1, [x29, #-32]\n\tadd\tv0.8h, v0.8h, v1.8h\n\tstr\tq0, [sp, #80]\n\tldr\tq0, [sp, #80]\n\tstr\tq0, [sp, #16]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n                                        // kill: def $w1 killed $w0\n\tldr\tw0, [sp, #12]                   // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 176\n\tldp\tx29, x30, [sp, #160]            // 16-byte Folded Reload\n\tadd\tsp, sp, #176\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    },
    {
        "id": "3370",
        "c": "#include <arm_neon.h>\n#include <stdio.h>\n\nint main() {\n    int8x8_t a = {0};\n    int8x8_t b = {0};\n    int8x8_t idx = {0};\n    int8x8_t result = vtbx1_s8(a, b, idx);\n    printf(\"Result computed successfully!\\n\");\n    return 0;\n}\n",
        "asm": "\t.text\n\t.file\t\"intrinsic_example_3370.c\"\n\t.globl\tmain                            // -- Begin function main\n\t.p2align\t2\n\t.type\tmain,@function\nmain:                                   // @main\n\t.cfi_startproc\n// %bb.0:\n\tsub\tsp, sp, #96\n\t.cfi_def_cfa_offset 96\n\tstp\tx29, x30, [sp, #80]             // 16-byte Folded Spill\n\tadd\tx29, sp, #80\n\t.cfi_def_cfa w29, 16\n\t.cfi_offset w30, -8\n\t.cfi_offset w29, -16\n\tmovi\tv0.2d, #0000000000000000\n                                        // kill: def $d0 killed $d0 killed $q0\n\tmovi\tv3.8b, #8\n\tmov\tw8, wzr\n\tstr\tw8, [sp, #4]                    // 4-byte Folded Spill\n\tstur\twzr, [x29, #-36]\n\tstr\td0, [sp, #32]\n\tstr\td0, [sp, #24]\n\tstr\td0, [sp, #16]\n\tldr\td2, [sp, #32]\n\tldr\td1, [sp, #24]\n\tldr\td0, [sp, #16]\n\tstur\td2, [x29, #-8]\n\tstur\td1, [x29, #-16]\n\tstur\td0, [x29, #-24]\n\tldur\td1, [x29, #-8]\n\tldur\td2, [x29, #-16]\n\tldur\td0, [x29, #-24]\n\tfmov\td2, d2\n                                        // kill: def $q2 killed $d2\n\ttbl\tv2.8b, { v2.16b }, v0.8b\n\tcmhs\tv0.8b, v0.8b, v3.8b\n\tbsl\tv0.8b, v1.8b, v2.8b\n\tstur\td0, [x29, #-32]\n\tldur\td0, [x29, #-32]\n\tstr\td0, [sp, #8]\n\tadrp\tx0, .L.str\n\tadd\tx0, x0, :lo12:.L.str\n\tbl\tprintf\n\tldr\tw0, [sp, #4]                    // 4-byte Folded Reload\n\t.cfi_def_cfa wsp, 96\n\tldp\tx29, x30, [sp, #80]             // 16-byte Folded Reload\n\tadd\tsp, sp, #96\n\t.cfi_def_cfa_offset 0\n\t.cfi_restore w30\n\t.cfi_restore w29\n\tret\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        // -- End function\n\t.type\t.L.str,@object                  // @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Result computed successfully!\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"clang version 19.1.1 (https://github.com/conda-forge/clangdev-feedstock 7d84e3a207c1d5abcfa695bbe3f16e88fcd713cb)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n\t.addrsig\n\t.addrsig_sym printf\n"
    }
]